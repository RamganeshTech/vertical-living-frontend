import{b as o,q as c}from"./index-IX_jUi_Z.js";import{g as i}from"./roleCheck-yWEzJ9f0.js";import{u as w}from"./useQuery-BBgvqOK0.js";import{u}from"./useMutation-oVcqBODs.js";import{u as y}from"./useInfiniteQuery-CoVfmFiF.js";const m=async({organizationId:t,specification:r,api:e})=>{const{data:a}=await e.post(`/materialinventory?organizationId=${t}`,r);if(!a.ok)throw new Error(a.message);return a.data},d=async({id:t,specification:r,api:e})=>{const{data:a}=await e.put(`/materialinventory/${t}/updatematerial`,{specification:r});if(!a.ok)throw new Error(a.message);return a.data},f=async({id:t,api:r})=>{const{data:e}=await r.delete(`/materialinventory/${t}/deletematerial`);if(!e.ok)throw new Error(e.message);return e.data},p=async({id:t,api:r})=>{const{data:e}=await r.get(`/materialinventory/${t}/getsingle`);if(!e.ok)throw new Error(e.message);return e.data},v=async({organizationId:t,pageParam:r=1,filters:e={},api:a})=>{const n=new URLSearchParams({organizationId:t,page:String(r),...e}),{data:l}=await a.get(`/materialinventory/getallmaterial?${n.toString()}`);if(!l.ok)throw new Error(l.message);return l},s=["owner","staff","CTO"],k=()=>{const{role:t}=o(),r=i(t);return u({mutationFn:async({organizationId:e,specification:a})=>{if(!t||!s.includes(t))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await m({organizationId:e,specification:a,api:r})},onSuccess:(e,{organizationId:a})=>{c.invalidateQueries({queryKey:["materialinventory",a]})}})},q=()=>{const{role:t}=o(),r=i(t);return u({mutationFn:async({id:e,specification:a})=>{if(!t||!s.includes(t))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await d({id:e,specification:a,api:r})},onSuccess:(e,{id:a})=>{c.invalidateQueries({queryKey:["materialinventory",a]})}})},P=()=>{const{role:t}=o(),r=i(t);return u({mutationFn:async({id:e})=>{if(!t||!s.includes(t))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await f({id:e,api:r})},onSuccess:(e,{id:a})=>{c.invalidateQueries({queryKey:["materialinventory",a]})}})},F=t=>{const{role:r}=o(),e=i(r);return w({queryKey:["materialinventory",t],queryFn:async()=>{if(!r||!s.includes(r))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance not found for role");return await p({id:t,api:e})},enabled:!!t&&!!r,retry:!1,refetchOnWindowFocus:!1})},A=(t,r={})=>{const{role:e}=o(),a=i(e);return y({queryKey:["materialinventory",t,r],enabled:!!t&&!!e,initialPageParam:1,queryFn:async({pageParam:n=1})=>{if(!e||!s.includes(e))throw new Error("not allowed to make this api call");if(!a)throw new Error("API instance not found for role");return await v({organizationId:t,pageParam:n,filters:r,api:a})},getNextPageParam:n=>n.page<n.totalPages?n.page+1:void 0,retry:!1,refetchOnWindowFocus:!1})};export{k as a,q as b,P as c,F as d,A as u};
