import{u as i}from"./useQuery-BPoeBSke.js";import{u as l}from"./useMutation-BbhnaANP.js";import{d as o,q as c}from"./index-DcYk0AxP.js";import{g as s}from"./roleCheck-D-Yu12LV.js";const d=async({api:a,projectId:e,selectedUnit:t})=>{const{data:r}=await a.post(`/selectedexternal/${e}/addtoselected`,{selectedUnit:t});if(!r.ok)throw new Error(r.message);return r.data},p=()=>{const a=["owner","staff","CTO"],{role:e}=o(),t=s(e);return l({mutationFn:async({projectId:r,selectedUnit:n})=>{if(!e||!a.includes(e))throw new Error("Not authorized");if(!t)throw new Error("API not available");return await d({api:t,projectId:r,selectedUnit:n})},onSuccess:(r,{projectId:n})=>{c.invalidateQueries({queryKey:["selected-external",n]})}})},u=async({api:a,projectId:e})=>{const{data:t}=await a.get(`/selectedexternal/${e}/getselected`);if(!t.ok)throw new Error(t.message);return t.data},h=a=>{const{role:e}=o(),t=s(e);return i({queryKey:["selected-external",a],queryFn:async()=>{if(!t)throw new Error("API not available");return await u({api:t,projectId:a})},enabled:!!a})},w=async({api:a,projectId:e,unitId:t})=>{const{data:r}=await a.delete(`/selectedexternal/${e}/${t}/deleteselected`);if(!r.ok)throw new Error(r.message);return r.data},S=()=>{const a=["owner","staff","CTO"],{role:e}=o(),t=s(e);return l({mutationFn:async({projectId:r,unitId:n})=>{if(!e||!a.includes(e))throw new Error("Not authorized");if(!t)throw new Error("API not available");return await w({api:t,projectId:r,unitId:n})},onSuccess:(r,{projectId:n})=>{c.invalidateQueries({queryKey:["selected-external",n]})}})},f=async({projectId:a,api:e})=>(await e.patch(`/selectedexternal/${a}/status`)).data.data,A=()=>{const a=["owner","staff","CTO"],{role:e}=o(),t=s(e);return l({mutationFn:async({projectId:r})=>{if(!e||!a.includes(e))throw new Error("Not authorized");if(!t)throw new Error("API not available");return await f({api:t,projectId:r})},onSuccess:(r,{projectId:n})=>{c.invalidateQueries({queryKey:["selected-external",n]})}})};export{h as a,S as b,A as c,p as u};
