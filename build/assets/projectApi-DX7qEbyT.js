import{h as a,i as l,k as s,q as i,l as n}from"./index-Bsb9hJOa.js";const u=async({api:t,projectData:r,orgsId:e})=>{try{let{data:o}=await t.post(`/project/createproject/${e}`,r);if(o.ok)return o}catch(o){throw o}},w=async({orgsId:t,api:r})=>{try{let{data:e}=await r.get(`/project/getprojects/${t}`);return e.ok?e.data:[]}catch(e){throw e}},d=async(t,r)=>{try{let{data:e}=await r.delete(`/project/deleteproject/${t}`);if(e.ok)return e.data}catch(e){throw e}},f=async({projectId:t,formData:r,api:e})=>{try{let{data:o}=await e.put(`/project/updateproject/${t}`,r);if(o.ok)return o}catch(o){throw o}},h=t=>{const{role:r}=a(),e=n(r),o=["owner","staff","CTO","worker","client"];return l({queryKey:["project"],queryFn:async()=>{if(!r)throw new Error("Not Allowed");if(!o.includes(r))throw new Error("Not Allowed");if(!e)throw new Error("API not found");return await w({orgsId:t,api:e})},enabled:!!r,refetchOnWindowFocus:!1,retry:!1})},y=()=>{const{role:t}=a(),r=n(t),e=["owner","staff","CTO"];return s({mutationFn:async({projectData:o,orgsId:c})=>{if(!t)throw new Error("Not Authrorized");if(!e.includes(t))throw new Error("Not Allowed to make api calls");if(!r)throw new Error("API not found");return await u({api:r,orgsId:c,projectData:o})},onSuccess:()=>{i.invalidateQueries({queryKey:["project"]})}})},j=()=>{const{role:t}=a(),r=n(t),e=["owner","CTO"];return s({mutationFn:async o=>{if(!t)throw new Error("Not Authrorized");if(!e.includes(t))throw new Error("Not Allowed to make api calls");if(!r)throw new Error("API not found");return await d(o,r)},onSuccess:()=>{i.invalidateQueries({queryKey:["project"]})}})},A=()=>{const{role:t}=a(),r=n(t),e=["owner","staff","CTO"];return s({mutationFn:async({projectId:o,formData:c})=>{if(!t)throw new Error("Not Authrorized");if(!e.includes(t))throw new Error("Not Allowed to make api calls");if(!r)throw new Error("API not found");return await f({projectId:o,formData:c,api:r})},onSuccess:()=>{i.invalidateQueries({queryKey:["project"]})}})};export{y as a,A as b,j as c,h as u};
