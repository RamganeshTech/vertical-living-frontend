import{e as s,g as w,f as u,q as c,h as i}from"./index-HgTal7lb.js";const m=async({projectId:a,siteDetails:e,api:t})=>{const{data:o}=await t.post(`/sitemeasurement/createmeasurement/${a}`,{siteDetails:e});if(!o.ok)throw new Error(o.message);return o.data},d=async({projectId:a,room:e,api:t})=>{const{data:o}=await t.post(`/sitemeasurement/createroom/${a}`,{room:e});if(!o.ok)throw new Error(o.message);return o.data},f=async({projectId:a,api:e})=>{const{data:t}=await e.get(`/sitemeasurement/getmeasurement/${a}`);if(!t.ok)throw new Error(t.message);return t.data},p=async({projectId:a,api:e,payload:t})=>{const{data:o}=await e.put(`/sitemeasurement/updatecommonmeasurement/${a}`,t);if(!o.ok)throw new Error(o.message);return o.data},h=async({projectId:a,api:e,roomId:t,room:o})=>{const{data:n}=await e.put(`/sitemeasurement/updateroommeasurement/${a}/${t}`,{room:o});if(!n.ok)throw new Error(n.message);return n.data},y=async({projectId:a,api:e})=>{const{data:t}=await e.put(`/sitemeasurement/completionstatus/${a}`);if(!t.ok)throw new Error(t.message);return t.data},E=async({projectId:a,roomId:e,api:t})=>{const{data:o}=await t.patch(`/sitemeasurement/deleteroom/${a}/${e}`);if(!o.ok)throw new Error(o.message);return o.data},S=async({projectId:a,api:e})=>{const{data:t}=await e.put(`/sitemeasurement/deletesitemeasurement/${a}`);if(!t.ok)throw new Error(t.message);return t.data},R=async({formId:a,projectId:e,deadLine:t,api:o})=>{const{data:n}=await o.put(`/sitemeasurement/deadline/${e}/${a}`,{deadLine:t});if(!n.ok)throw new Error(n.message);return n.data},M=async({formId:a,files:e,api:t,projectId:o})=>{const n=new FormData;return e.forEach(l=>n.append("file",l)),(await t.post(`/sitemeasurement/upload/multiple/${o}/${a}`,n,{headers:{"Content-Type":"multipart/form-data"}})).data},k=async(a,e,t)=>{const{data:o}=await t.patch(`/sitemeasurement/${a}/deleteuploadedfile/${e}`);if(!o.ok)throw new Error(o.message);return o.data},q=()=>{const{role:a}=s(),e=i(a),t=["owner","staff","CTO","client"];return u({mutationFn:async({projectId:o,fileId:n})=>{if(!a||!t.includes(a))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance not found for role");return await k(o,n,e)},onSuccess:(o,{projectId:n})=>{c.invalidateQueries({queryKey:["siteMeasurement",n]})}})},T=({projectId:a})=>{const e=["owner","staff","CTO","client"],{role:t}=s(),o=i(t);return w({queryKey:["siteMeasurement"],queryFn:async()=>{if(!t||!e.includes(t))throw new Error("not allowed to make this api call");if(!o)throw new Error("API instance not found for role");return await f({projectId:a,api:o})},retry:!1,refetchOnMount:!1})},v=()=>{const a=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,siteDetails:n})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await m({projectId:o,api:t,siteDetails:n})},onSuccess:()=>{c.invalidateQueries({queryKey:["siteMeasurement"]})}})},O=()=>{const a=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,room:n})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await d({projectId:o,api:t,room:n})},onSuccess:()=>{c.invalidateQueries({queryKey:["siteMeasurement"]})}})},A=()=>{const a=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,payload:n})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await p({projectId:o,api:t,payload:n})},onSuccess:()=>{c.invalidateQueries({queryKey:["siteMeasurement"]})}})},D=()=>{const a=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,roomId:n,room:r})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await h({projectId:o,api:t,roomId:n,room:r})},onSuccess:()=>{c.invalidateQueries({queryKey:["siteMeasurement"]})}})},I=()=>{const a=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await y({projectId:o,api:t})},onSuccess:()=>{c.invalidateQueries({queryKey:["siteMeasurement"]})}})},K=()=>{const a=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,roomId:n})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await E({projectId:o,api:t,roomId:n})},onSuccess:()=>{c.invalidateQueries({queryKey:["siteMeasurement"]})}})},Q=()=>{const a=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await S({projectId:o,api:t})},onSuccess:()=>{c.invalidateQueries({queryKey:["siteMeasurement"]})}})},P=()=>{const a=["owner","staff","CTO"],{role:e}=s(),t=i(e);return u({mutationFn:async({formId:o,projectId:n,deadLine:r})=>{if(!e)throw new Error("not authorized");if(!a.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await R({formId:o,deadLine:r,projectId:n,api:t})}})},U=()=>{const a=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({formId:o,files:n,projectId:r})=>{if(!e)throw new Error("not authorized");if(!a.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await M({formId:o,files:n,projectId:r,api:t})}})},F=async({roomId:a,files:e,api:t,projectId:o})=>(await t.post(`/sitemeasurement/uploadroom/${o}/${a}`,e,{headers:{"Content-Type":"multipart/form-data"}})).data,g=async({roomId:a,uploadId:e,api:t,projectId:o})=>(await t.delete(`/sitemeasurement/deleteroom/${o}/${a}/${e}`)).data,C=async({projectId:a,roomId:e,uploadId:t,categoryName:o,api:n})=>{const{data:r}=await n.patch(`/sitemeasurement/updateimgname/${a}/${e}/${t}`,{categoryName:o});if(!r.ok)throw new Error(r.message);return r.data},z=()=>{const a=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({roomId:o,files:n,projectId:r})=>{if(!e)throw new Error("not authorized");if(!a.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await F({roomId:o,files:n,projectId:r,api:t})},onSuccess:()=>{c.invalidateQueries({queryKey:["siteMeasurement"]})}})},N=()=>{const a=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({roomId:o,uploadId:n,projectId:r})=>{if(!e)throw new Error("not authorized");if(!a.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await g({roomId:o,uploadId:n,projectId:r,api:t})},onSuccess:()=>{c.invalidateQueries({queryKey:["siteMeasurement"]})}})},G=()=>{const a=["owner","staff","CTO"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,roomId:n,uploadId:r,categoryName:l})=>{if(!e||!a.includes(e))throw new Error("Not allowed to make this API call");if(!t)throw new Error("API instance not found for role");return await C({projectId:o,roomId:n,uploadId:r,categoryName:l,api:t})},onSuccess:()=>{c.invalidateQueries({queryKey:["siteMeasurement"]})}})};export{N as a,G as b,z as c,v as d,O as e,A as f,D as g,K as h,Q as i,I as j,P as k,U as l,q as m,T as u};
