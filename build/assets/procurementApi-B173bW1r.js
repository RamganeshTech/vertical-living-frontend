import{h as a,i as w,k as u,q as o,l as s}from"./index-D4FmOK8C.js";const p=async({id:e,payload:r,api:t})=>{const{data:n}=await t.put(`/department/procurement/updateshop/${e}`,r);if(!n.ok)throw new Error(n.message);return n.data},m=async({id:e,payload:r,api:t})=>{const{data:n}=await t.put(`/department/procurement/updatedelivery/${e}`,r);if(!n.ok)throw new Error(n.message);return n.data},y=async({id:e,api:r})=>{const{data:t}=await r.delete(`/department/procurement/deleteprocurement/${e}`);if(!t.ok)throw new Error(t.message);return t.data},f=async({organizationId:e,projectId:r,api:t})=>{const n=new URLSearchParams;e&&n.append("organizationId",e),r&&n.append("projectId",r);const{data:i}=await t.get(`/department/procurement/getprocurementall?${n.toString()}`);if(!i.ok)throw new Error(i.message);return i.data},h=async({id:e,api:r})=>{const{data:t}=await r.get(`/department/procurement/getprocurementsingle/${e}`);if(!t.ok)throw new Error(t.message);return t.data},g=async({id:e,payload:r,api:t})=>{const{data:n}=await t.put(`/department/procurement/updatetotalcost/${e}`,r);if(!n.ok)throw new Error(n.message);return n.data},P=async({id:e,api:r})=>{const{data:t}=await r.patch(`/department/procurement/generatepdf/${e}`);if(!t.ok)throw new Error(t.message);return t.data},E=async(e,r,t)=>{const{data:n}=await t.delete(`/department/procurement/deletepdf/${e}/${r}`);if(!n.ok)throw new Error(n.message);return n.data},q=async(e,r)=>{const{data:t}=await r.post(`/department/procurement/synclogistics/${e}`);if(!t.ok)throw new Error(t.message);return t.data},v=async({api:e,organizationId:r,projectId:t,fromDept:n,totalCost:i,upiId:d})=>{const{data:l}=await e.post(`/department/procurement/syncaccounting/${r}/${t}`,{totalCost:i,fromDept:n,upiId:d});if(!l.ok)throw new Error(l.message);return l},c=["owner","CTO","staff"],K=()=>{const{role:e}=a(),r=s(e);return u({mutationFn:async({id:t,payload:n})=>{if(!e||!c.includes(e))throw new Error("Not allowed");if(!r)throw new Error("API instance not found for role");return await p({id:t,payload:n,api:r})},onSuccess:(t,{id:n})=>{o.invalidateQueries({queryKey:["procurement","details"]}),o.invalidateQueries({queryKey:["procurement","single",n]})}})},S=()=>{const{role:e}=a(),r=s(e);return u({mutationFn:async({id:t,payload:n})=>{if(!e||!c.includes(e))throw new Error("Not allowed");if(!r)throw new Error("API instance not found for role");return await m({id:t,payload:n,api:r})},onSuccess:(t,{id:n})=>{o.invalidateQueries({queryKey:["procurement","details"]}),o.invalidateQueries({queryKey:["procurement","single",n]})}})},Q=()=>{const{role:e}=a(),r=s(e);return u({mutationFn:async({id:t})=>{if(!e||!c.includes(e))throw new Error("Not allowed");if(!r)throw new Error("API instance not found for role");return await y({id:t,api:r})},onSuccess:()=>{o.invalidateQueries({queryKey:["procurement","details"]})}})},k=(e,r)=>{const{role:t}=a(),n=s(t);return w({queryKey:["procurement","details",e,r],queryFn:async()=>{if(!t||!c.includes(t))throw new Error("Not allowed");if(!n)throw new Error("API instance not found for role");return await f({organizationId:e,api:n,projectId:r.projectId})},enabled:!!e&&!!t&&!!n})},F=e=>{const{role:r}=a(),t=s(r);return w({queryKey:["procurement","single",e],queryFn:async()=>{if(!r||!c.includes(r))throw new Error("Not allowed");if(!t)throw new Error("API instance not found for role");return await h({id:e,api:t})},enabled:!!e&&!!r&&!!t})},$=()=>{const{role:e}=a(),r=s(e);return u({mutationFn:async({id:t,payload:n})=>{if(!e||!c.includes(e))throw new Error("Not allowed");if(!r)throw new Error("API instance not found for role");return await g({id:t,payload:n,api:r})},onSuccess:(t,{id:n})=>{o.invalidateQueries({queryKey:["procurement","details"]}),o.invalidateQueries({queryKey:["procurement","single",n]})}})},D=()=>{const e=["owner","staff","CTO"],{role:r}=a(),t=s(r);return u({mutationFn:async({id:n})=>{if(!r||!e.includes(r))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance missing");return await P({id:n,api:t})},onSuccess:(n,{id:i})=>{o.invalidateQueries({queryKey:["procurement","details"]}),o.invalidateQueries({queryKey:["procurement","single",i]})}})},I=()=>{const{role:e}=a(),r=s(e);return u({mutationFn:async({id:t,pdfId:n})=>{if(!e||!c.includes(e))throw new Error("Youre not allowed to delete pdf");if(!r)throw new Error("API instance not available");return await E(t,n,r)},onSuccess:(t,{id:n})=>{o.invalidateQueries({queryKey:["procurement","details"]}),o.invalidateQueries({queryKey:["procurement","single",n]})}})},N=()=>{const{role:e}=a(),r=s(e);return u({mutationFn:async({id:t})=>{if(!e||!c.includes(e))throw new Error("Youre not allowed to delete pdf");if(!r)throw new Error("API instance not available");return await q(t,r)},onSuccess:()=>{o.invalidateQueries({queryKey:["procurement","details"]}),o.invalidateQueries({queryKey:["logistics","shipments"]})}})},L=()=>{const{role:e}=a(),r=s(e);return u({mutationFn:async({organizationId:t,projectId:n,fromDept:i,totalCost:d,upiId:l})=>{if(!e||!c.includes(e))throw new Error("Not allowed");if(!r)throw new Error("API instance not found for role");return await v({organizationId:t,projectId:n,fromDept:i,totalCost:d,api:r,upiId:l})},onSuccess:()=>{o.invalidateQueries({queryKey:["logistics","shipments"]})}})};export{K as a,S as b,$ as c,D as d,I as e,N as f,L as g,k as h,Q as i,F as u};
