import{u as s,a as d,b as l,q as u,g as i,G as y}from"./index-C8ZngCsk.js";const h=async(t,e)=>(await e.get(`/worktasks/getworktaksmain/${t}`)).data.data,k=async(t,e)=>(await e.get(`/worktasks/getdailyschedule/${t}`)).data.data,m=async(t,e)=>(await e.get(`/worktasks/${t}/getworkers`)).data.data,p=async(t,e,r)=>(await r.post(`/worktasks/create/${t}`,e)).data.data,g=async(t,e,r,o)=>(console.log("im gettng called update workd api "),(await o.put(`/worktasks/update/${t}/${e}`,r)).data.data),E=async(t,e,r)=>(await r.delete(`/worktasks/${t}/${e}`)).data.data,S=async(t,e,r,o,a)=>{const n=new FormData;return n.append("date",r),a.forEach(w=>{n.append("files",w)}),(await o.post(`/worktasks/${t}/task/${e}/uploaddailyimage`,n,{headers:{"Content-Type":"multipart/form-data"}})).data.data},$=async({scheduleId:t,taskId:e,date:r,api:o,imageId:a})=>{const{data:n}=await o.delete(`/worktasks/${t}/deleteworkimage/${e}/date/${r}/image/${a}`);return n.data},A=async({projectId:t,formData:e,scheduleId:r=null,api:o})=>{const{data:a}=await o.post(`/worktasks/generatePdf/work/${t}/${r}`,e);if(!a.ok)throw new Error(a.message);return a.data},C=async(t,e)=>(await e.get(`/worktasks/getprojectassigne/${t}`)).data.data,I=async({scheduleId:t,formData:e,api:r})=>{const{data:o}=await r.post(`/worktasks/createcorrection/${t}`,e);if(!o.ok)throw new Error(o.message);return o.data},q=async({scheduleId:t,comparisonId:e,formData:r,api:o})=>{const{data:a}=await o.put(`/worktasks/uploadselectimagemanually/${t}/${e}`,r);if(!a.ok)throw new Error(a.message);return a.data},P=async({scheduleId:t,comparisonId:e,formData:r,api:o})=>{const{data:a}=await o.put(`/worktasks/uploadcorrectedimage/${t}/${e}`,r);if(!a.ok)throw new Error(a.message);return a.data},F=async({scheduleId:t,comparisonId:e,selectedImageId:r,formData:o,api:a})=>{const{data:n}=await a.put(`/worktasks/updateSelectimagecomment/${t}/${e}/${r}`,o);if(!n.ok)throw new Error(n.message);return n.data},O=async({scheduleId:t,comparisonId:e,selectId:r,api:o})=>{const{data:a}=await o.delete(`/worktasks/deleteselectimages/${t}/${e}/${r}`);if(!a.ok)throw new Error(a.message);return a.data},K=async({scheduleId:t,comparisonId:e,imageId:r,api:o})=>{const{data:a}=await o.delete(`/worktasks/deletecorrectedimages/${t}/${e}/${r}`);if(!a.ok)throw new Error(a.message);return a.data},W=t=>{const{role:e}=s(),r=i(e),o=["owner","staff","CTO","worker","client"];return d({queryKey:["work-main-stage",t],queryFn:()=>{if(!e||!o.includes(e))throw new Error("Unauthorized");if(!r)throw new Error("API not found");return h(t,r)},enabled:!!t,retry:!1,refetchOnMount:!1})},Q=t=>{const{role:e}=s(),r=i(e),o=["owner","staff","CTO","worker","client"];return d({queryKey:["daily-schedule",t],queryFn:()=>{if(!e||!o.includes(e))throw new Error("Unauthorized");if(!r)throw new Error("API not found");return k(t,r)},enabled:!!t,retry:!1,refetchOnMount:!1})},v=t=>{const{role:e}=s(),r=i(e),o=["owner","staff","CTO"];return d({queryKey:["project-workers",t],queryFn:()=>{if(!e||!o.includes(e))throw new Error("Unauthorized");if(!r)throw new Error("API not found");return m(t,r)},enabled:!!t,retry:!1,refetchOnMount:!1})},f=["owner","staff","CTO"],_=()=>{const{role:t}=s(),e=i(t);return l({mutationFn:async({projectId:r,formData:o})=>{if(!t||!f.includes(t))throw new Error("Unauthorized");if(!e)throw new Error("API not found");return p(r,o,e)},onSuccess:(r,{projectId:o})=>{u.invalidateQueries({queryKey:["daily-schedule",o]})}})},U=()=>{const{role:t}=s(),e=i(t);return l({mutationFn:async({projectId:r,scheduleId:o,formData:a})=>{if(!t||!f.includes(t))throw new Error("Unauthorized");if(!e)throw new Error("API not found");return g(r,o,a,e)},onSuccess:(r,{projectId:o})=>{u.invalidateQueries({queryKey:["daily-schedule",o]})}})},M=()=>{const{role:t}=s(),e=i(t);return l({mutationFn:async({scheduleId:r,taskId:o})=>{if(!t||!f.includes(t))throw new Error("Unauthorized");if(!e)throw new Error("API not found");return E(r,o,e)},onSuccess:(r,{projectId:o})=>{o&&u.invalidateQueries({queryKey:["work-schedule",o]})}})},G=()=>{const{role:t}=s(),e=i(t),r=["owner","staff","CTO","worker","client"];return l({mutationFn:async({scheduleId:o,taskId:a,date:n,files:c})=>{if(!t||!r.includes(t))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance missing");return await S(o,a,n,e,c)},onSuccess:(o,{projectId:a})=>{a&&u.invalidateQueries({queryKey:["work-schedule",a]})}})},b=()=>{const{role:t}=s(),e=i(t),r=["owner","staff","CTO","worker","client"];return l({mutationFn:async({scheduleId:o,taskId:a,date:n,imageId:c})=>{if(!t||!r.includes(t))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance missing");return await $({scheduleId:o,taskId:a,date:n,api:e,imageId:c})},onSuccess:(o,{projectId:a})=>{u.invalidateQueries({queryKey:["daily-schedule",a]})}})},j=()=>{const t=["owner","staff","CTO"],{role:e}=s(),r=i(e);return l({mutationFn:async({projectId:o,formData:a,scheduleId:n=null})=>{if(!e||!t.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance missing");return await A({projectId:o,formData:a,scheduleId:n,api:r})},onSuccess:(o,{projectId:a})=>{u.invalidateQueries({queryKey:["daily-schedule",a]})}})},z=t=>{const{role:e}=s(),r=i(e),o=["owner","staff","CTO","worker","client"];return d({queryKey:["projectassigne",t],queryFn:()=>{if(!e||!o.includes(e))throw new Error("Unauthorized");if(!r)throw new Error("API not found");return C(t,r)},enabled:!!t,retry:!1,refetchOnMount:!1})},x=()=>{const t=["owner","staff","CTO"],{role:e}=s(),r=i(e);return l({mutationFn:async({scheduleId:o,formData:a})=>{if(!e||!t.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance missing");return await I({scheduleId:o,formData:a,api:r})},onSuccess:(o,{projectId:a})=>{u.invalidateQueries({queryKey:["daily-schedule",a]})}})},L=()=>{const t=["owner","staff","CTO"],{role:e}=s(),r=i(e);return l({mutationFn:async({projectId:o,scheduleId:a,comparisonId:n,formData:c})=>{if(!e||!t.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance missing");return await q({scheduleId:a,comparisonId:n,formData:c,api:r})},onSuccess:(o,{projectId:a})=>{u.invalidateQueries({queryKey:["daily-schedule",a]})}})},B=()=>{const t=["owner","staff","CTO","worker"],{role:e}=s(),r=i(e);return l({mutationFn:async({projectId:o,scheduleId:a,comparisonId:n,formData:c})=>{if(!e||!t.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance missing");return await P({scheduleId:a,comparisonId:n,formData:c,api:r})},onSuccess:(o,{projectId:a})=>{u.invalidateQueries({queryKey:["daily-schedule",a]})}})},H=()=>{const t=["owner","staff","CTO"],{role:e}=s(),r=i(e);return l({mutationFn:async({projectId:o,scheduleId:a,comparisonId:n,selectedImageId:c,data:w})=>{if(!e||!t.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance missing");return await F({scheduleId:a,comparisonId:n,selectedImageId:c,formData:w,api:r})},onSuccess:(o,{projectId:a})=>{u.invalidateQueries({queryKey:["daily-schedule",a]})}})},J=()=>{const t=["owner","staff","CTO","worker"],{role:e}=s(),r=i(e);return l({mutationFn:async({projectId:o,scheduleId:a,comparisonId:n,imageId:c})=>{if(!e||!t.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance missing");return await K({scheduleId:a,comparisonId:n,imageId:c,api:r})},onSuccess:(o,{projectId:a})=>{u.invalidateQueries({queryKey:["daily-schedule",a]})}})},N=()=>{const t=["owner","staff","CTO"],{role:e}=s(),r=i(e);return l({mutationFn:async({projectId:o,scheduleId:a,comparisonId:n,selectId:c})=>{if(!e||!t.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance missing");return await O({scheduleId:a,comparisonId:n,selectId:c,api:r})},onSuccess:(o,{projectId:a})=>{u.invalidateQueries({queryKey:["daily-schedule",a]})}})},D=async({formId:t,projectId:e,deadLine:r,api:o})=>{const{data:a}=await o.put(`/worktasks/deadline/${e}/${t}`,{deadLine:r});if(!a.ok)throw new Error(a.message);return a.data},R=async({projectId:t})=>{console.log("im gettng called complete workd api ");const{data:e}=await y.put(`https://houseofram.in/api/worktasks/completionstatus/${t}`);if(!e.ok)throw new Error(e.message);return e.data},V=()=>{const t=["owner","staff","CTO"],{role:e}=s(),r=i(e);return l({mutationFn:async({formId:o,projectId:a,deadLine:n})=>{if(!e||!t.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance missing");return await D({formId:o,projectId:a,deadLine:n,api:r})},onSuccess:(o,{projectId:a})=>{u.invalidateQueries({queryKey:["work-main-stage",a]})}})},X=()=>l({mutationFn:async({projectId:t})=>await R({projectId:t}),onSuccess:(t,{projectId:e})=>{u.invalidateQueries({queryKey:["work-main-stage",e]})}});export{V as a,X as b,z as c,v as d,_ as e,U as f,j as g,x as h,L as i,H as j,N as k,B as l,J as m,Q as n,M as o,G as p,b as q,W as u};
