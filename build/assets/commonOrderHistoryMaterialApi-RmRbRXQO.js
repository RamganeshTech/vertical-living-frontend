import{d as s,f as d,q as m}from"./index-DcYk0AxP.js";import{g as i}from"./roleCheck-D-Yu12LV.js";import{u as w}from"./useQuery-BPoeBSke.js";import{u as c}from"./useMutation-BbhnaANP.js";const y=async(t,o,e)=>{const{data:r}=await e.post(`/commonorder/createcommonproject/${t}`,o);if(!r.ok)throw new Error(r.message);return r.data},p=async(t,o,e)=>{const{data:r}=await e.put(`/commonorder/editcoommonproject/${t}`,o);if(!r.ok)throw new Error(r.message);return r.data},h=async(t,o)=>{const{data:e}=await o.delete(`/commonorder/deletecommonproject/${t}`);if(!e.ok)throw new Error(e.message);return e.message},C=async(t,o,e)=>{const{data:r}=await e.post(`/commonorder/createcommonorder/${t}/units`,o);if(!r.ok)throw new Error(r.message);return r.data},g=async(t,o,e,r)=>{const{data:n}=await r.put(`/commonorder/${t}/editcommonorder/${o}`,e);if(!n.ok)throw new Error(n.message);return n.data},E=async(t,o,e)=>{const{data:r}=await e.delete(`/commonorder/${t}/deletecommonorder/${o}`);if(!r.ok)throw new Error(r.message);return r.data},Q=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o),r=d();return c({mutationFn:async({organizationId:n,payload:a})=>{if(!o||!t.includes(o))throw new Error("Not allowed");if(!e)throw new Error("API not available");return await y(n,a,e)},onSuccess:()=>{r.invalidateQueries({queryKey:["common-order-history"]})}})},T=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o),r=d();return c({mutationFn:async({id:n,payload:a})=>{if(!o||!t.includes(o))throw new Error("Not allowed");if(!e)throw new Error("API not available");return await p(n,a,e)},onSuccess:(n,{id:a})=>{r.invalidateQueries({queryKey:["common-order-history",a]})}})},_=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o),r=d();return c({mutationFn:async({id:n})=>{if(!o||!t.includes(o))throw new Error("Not allowed");if(!e)throw new Error("API not available");return await h(n,e)},onSuccess:(n,{id:a})=>{r.invalidateQueries({queryKey:["common-order-history",a]})}})},j=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o),r=d();return c({mutationFn:async({id:n,payload:a})=>{if(!o||!t.includes(o))throw new Error("Not allowed");if(!e)throw new Error("API not available");return await C(n,a,e)},onSuccess:(n,{id:a})=>{r.invalidateQueries({queryKey:["common-order-single",a]})}})},M=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o),r=d();return c({mutationFn:async({id:n,unitId:a,payload:l})=>{if(!o||!t.includes(o))throw new Error("Not allowed");if(!e)throw new Error("API not available");return await g(n,a,l,e)},onSuccess:(n,{id:a})=>{r.invalidateQueries({queryKey:["common-order-single",a]})}})},N=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o),r=d();return c({mutationFn:async({id:n,unitId:a})=>{if(!o||!t.includes(o))throw new Error("Not allowed");if(!e)throw new Error("API not available");return await E(n,a,e)},onSuccess:(n,{id:a})=>{r.invalidateQueries({queryKey:["common-order-single",a]})}})},O=async({organizationId:t,api:o})=>{const{data:e}=await o.get(`/commonorder/getalldetails/${t}`);if(!e.ok)throw new Error(e.message);return e.data},U=t=>{const o=["owner","staff","CTO","worker","client"],{role:e}=s(),r=i(e);return w({queryKey:["common-order-history",t],queryFn:async()=>{if(!e||!o.includes(e))throw new Error("Not allowed");if(!r)throw new Error("API not available");return await O({organizationId:t,api:r})},enabled:!!e&&!!t&&!!r,retry:!1,refetchOnMount:!1})},A=async({id:t,api:o})=>{const{data:e}=await o.get(`/commonorder/getsingleproject/${t}`);if(!e.ok)throw new Error(e.message);return e.data},D=t=>{const o=["owner","staff","CTO","worker","client"],{role:e}=s(),r=i(e);return w({queryKey:["common-order-single",t],queryFn:async()=>{if(!e||!o.includes(e))throw new Error("Not allowed");if(!r)throw new Error("API not available");return await A({id:t,api:r})},enabled:!!e&&!!t&&!!r,retry:!1,refetchOnMount:!1})},q=async(t,o,e)=>{const{data:r}=await e.put(`/commonorder/${t}/delivery-location`,o);if(!r.ok)throw new Error(r.message);return r.data},G=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o),r=d();return c({mutationFn:async({id:n,updates:a})=>{if(!o||!t.includes(o))throw new Error("Not allowed to update delivery location");if(!e)throw new Error("API instance not available");return await q(n,a,e)},onSuccess:(n,{id:a})=>{r.invalidateQueries({queryKey:["common-order-single",a]})}})},v=async(t,o,e)=>{const{data:r}=await e.put(`/commonorder/${t}/shop`,o);if(!r.ok)throw new Error(r.message);return r.data},L=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o),r=d();return c({mutationFn:async({id:n,updates:a})=>{if(!o||!t.includes(o))throw new Error("Not allowed to update shop details");if(!e)throw new Error("API instance not available");return await v(n,a,e)},onSuccess:(n,{id:a})=>{r.invalidateQueries({queryKey:["common-order-single",a]})}})},k=async({id:t,unitId:o,subItemName:e,quantity:r,unit:n,api:a})=>{const{data:l}=await a.post(`/commonorder/${t}/unit/${o}/addsubitem`,{subItemName:e,quantity:r,unit:n});if(!l.ok)throw new Error(l.message);return l.data},H=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o);return c({mutationFn:async({id:r,unitId:n,subItemName:a,quantity:l,unit:u})=>{if(!o||!t.includes(o))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance missing");return await k({id:r,unitId:n,subItemName:a,quantity:l,unit:u,api:e})},onSuccess:(r,n)=>{m.invalidateQueries({queryKey:["common-order-single",n.id]})}})},b=async({id:t,unitId:o,subItemId:e,api:r})=>{const{data:n}=await r.delete(`/commonorder/${t}/unit/${o}/deletesubitem/${e}`);if(!n.ok)throw new Error(n.message);return n.data},x=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o);return c({mutationFn:async({id:r,unitId:n,subItemId:a})=>{if(!o||!t.includes(o))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance missing");return await b({id:r,unitId:n,subItemId:a,api:e})},onSuccess:(r,n)=>{m.invalidateQueries({queryKey:["common-order-single",n.id]})}})},P=async({id:t,unitId:o,subItemId:e,subItemName:r,quantity:n,unit:a,api:l})=>{console.log("subitem",r),console.log("quantity",n),console.log("unit",a);const{data:u}=await l.put(`/commonorder/${t}/unit/${o}/updatesubitem/${e}`,{subItemName:r,quantity:n,unit:a});if(!u.ok)throw new Error(u.message);return u.data},Y=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o);return c({mutationFn:async({id:r,unitId:n,subItemId:a,subItemName:l,quantity:u,unit:f})=>{if(!o||!t.includes(o))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance missing");return await P({id:r,unitId:n,subItemId:a,subItemName:l,quantity:u,unit:f,api:e})},onSuccess:(r,n)=>{m.invalidateQueries({queryKey:["common-order-single",n.id]})}})},S=async(t,o,e)=>{const{data:r}=await e.delete(`/commonorder/delete/${t}/${o}`);if(!r.ok)throw new Error(r.message);return r.data},B=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o),r=d();return c({mutationFn:async({id:n,pdfId:a})=>{if(!o||!t.includes(o))throw new Error("Youre not allowed to delete pdf");if(!e)throw new Error("API instance not available");return await S(n,a,e)},onSuccess:(n,{id:a})=>{r.invalidateQueries({queryKey:["common-order-single",a]})}})},$=async({id:t,api:o})=>{const{data:e}=await o.patch(`/commonorder/generatelink/${t}`);if(!e.ok)throw new Error(e.message);return e.data},J=()=>{const t=["owner","staff","CTO"],{role:o}=s(),e=i(o);return c({mutationFn:async({id:r})=>{if(!o||!t.includes(o))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance missing");return await $({id:r,api:e})},onSuccess:(r,{id:n})=>{m.invalidateQueries({queryKey:["common-order-single",n]})}})};export{Q as a,_ as b,T as c,j as d,M as e,D as f,N as g,G as h,L as i,J as j,B as k,H as l,x as m,Y as n,U as u};
