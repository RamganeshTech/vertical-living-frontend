import{c as r,q as c}from"./index-CluF71pO.js";import{g as i}from"./roleCheck-C6Z-poLV.js";import{u as d}from"./useQuery-BSXZQ8G2.js";import{u as l}from"./useMutation-Deoeq1CZ.js";const w=async({projectId:a,roomName:e,api:o})=>{const{data:t}=await o.post(`/sampledesign/${a}/rooms`,{roomName:e});if(!t.ok)throw new Error(t.message);return t.data},m=async({projectId:a,roomName:e,files:o,api:t})=>{const n=new FormData;o.forEach(u=>n.append("files",u));const{data:s}=await t.post(`/sampledesign/${a}/rooms/${e}/upload`,n,{headers:{"Content-Type":"multipart/form-data"}});return s.data},f=async({projectId:a,api:e})=>{const{data:o}=await e.get(`/sampledesign/${a}/rooms`);if(!o.ok)throw new Error(o.message);return o.data},p=async({projectId:a,roomName:e,fileId:o,api:t})=>{const{data:n}=await t.delete(`/sampledesign/${a}/rooms/${e}/delete/${o}`);if(!n.ok)throw new Error(n.message);return n.data},h=async({projectId:a,api:e,roomId:o})=>{const{data:t}=await e.delete(`/sampledesign/${a}/${o}/deleteroom`);if(!t.ok)throw new Error(t.message);return t.data},y=async({projectId:a,api:e})=>{const{data:o}=await e.put(`/sampledesign/completionstatus/${a}`);if(!o.ok)throw new Error(o.message);return o.data},g=async({formId:a,projectId:e,deadLine:o,api:t})=>{const{data:n}=await t.put(`/sampledesign/deadline/${e}/${a}`,{deadLine:o});if(!n.ok)throw new Error(n.message);return n.data},S=()=>{const a=["owner","staff","CTO","client"],{role:e}=r(),o=i(e);return l({mutationFn:async({projectId:t,roomName:n})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!o)throw new Error("API instance not found for role");return await w({projectId:t,roomName:n,api:o})},onSuccess:(t,{projectId:n})=>{c.invalidateQueries({queryKey:["sampledesign","roomfiles",n]})}})},$=()=>{const a=["owner","staff","CTO","client"],{role:e}=r(),o=i(e);return l({mutationFn:async({projectId:t,roomName:n,files:s})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!o)throw new Error("API instance not found for role");return await m({projectId:t,roomName:n,files:s,api:o})},onSuccess:(t,{projectId:n})=>{c.invalidateQueries({queryKey:["sampledesign","roomfiles",n]})}})},C=a=>{const e=["owner","staff","CTO","client"],{role:o}=r(),t=i(o);return d({queryKey:["sampledesign","roomfiles",a],queryFn:async()=>{if(!o||!e.includes(o))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await f({projectId:a,api:t})},retry:!1,refetchOnWindowFocus:!1})},D=()=>{const a=["owner","staff","CTO","client"],{role:e}=r(),o=i(e);return l({mutationFn:async({projectId:t,roomName:n,fileId:s})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!o)throw new Error("API instance not found for role");return await p({projectId:t,roomName:n,fileId:s,api:o})},onSuccess:(t,{projectId:n})=>{c.invalidateQueries({queryKey:["sampledesign","roomfiles",n]})}})},q=()=>{const a=["owner","staff","CTO","client"],{role:e}=r(),o=i(e);return l({mutationFn:async({projectId:t,roomId:n})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!o)throw new Error("API instance not found for role");return await h({projectId:t,roomId:n,api:o})},onSuccess:(t,{projectId:n})=>{c.invalidateQueries({queryKey:["sampledesign","roomfiles",n]})}})},T=()=>{const a=["owner","staff","CTO","client"],{role:e}=r(),o=i(e);return l({mutationFn:async({projectId:t})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!o)throw new Error("API instance not found for role");return await y({projectId:t,api:o})},onSuccess:(t,{projectId:n})=>{c.invalidateQueries({queryKey:["sampledesign","roomfiles",n]})}})},A=()=>{const a=["owner","staff","CTO"],{role:e}=r(),o=i(e);return l({mutationFn:async({formId:t,projectId:n,deadLine:s})=>{if(!e)throw new Error("not authorized");if(!a.includes(e))throw new Error("you  dont have the access to make this api");if(!o)throw new Error("api is null");return await g({formId:t,projectId:n,deadLine:s,api:o})}})};export{S as a,$ as b,D as c,q as d,T as e,A as f,C as u};
