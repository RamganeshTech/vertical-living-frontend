import{d as c}from"./useQuery-DmDT-v30.js";import{u as l}from"./useMutation-CSGCjuCw.js";import{d as s,q as u}from"./index-ftjmZ4WH.js";import{g as i}from"./roleCheck-BuedAs3v.js";const d=async({projectId:e,organizationId:o,payload:r,api:t})=>{const{data:a}=await t.post(`/workreports/create/${e}/${o}`,r);if(!a.ok)throw new Error(a.message);return a.data},f=async({projectId:e,api:o})=>{const{data:r}=await o.get(`/workreports/getreports/${e}`);if(!r.ok)throw new Error(r.message);return r.data},p=async({projectId:e,id:o,dailyTaskId:r,date:t,api:a})=>{const{data:n}=await a.get(`/workreports/workimages/${e}/${o}/${t}/${r}`);if(!n.ok)throw new Error(n.message);return n.data},y=async({id:e,api:o})=>{const{data:r}=await o.delete(`/workreports/delete/${e}`);if(!r.ok)throw new Error(r.message);return r.data},R=()=>{const e=["owner","staff","CTO"],{role:o}=s(),r=i(o);return l({mutationFn:async({projectId:t,organizationId:a,payload:n})=>{if(!o||!e.includes(o))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await d({projectId:t,organizationId:a,payload:n,api:r})},onSuccess:(t,{projectId:a})=>{u.invalidateQueries({queryKey:["workreports",a]})}})},E=e=>{const o=["owner","staff","CTO","client"],{role:r}=s(),t=i(r);return c({queryKey:["workreports",e],queryFn:async()=>{if(!r||!o.includes(r))throw new Error("not allowed to fetch this data");if(!t)throw new Error("API instance not found for role");return await f({projectId:e,api:t})},enabled:!!e&&!!r})},q=()=>{const e=["owner","staff","CTO"],{role:o}=s(),r=i(o);return l({mutationFn:async({id:t})=>{if(!o||!e.includes(o))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await y({id:t,api:r})},onSuccess:(t,{projectId:a})=>{u.invalidateQueries({queryKey:["workreports",a]})}})},A=(e,o,r,t)=>{const a=["owner","staff","CTO","client"],{role:n}=s(),w=i(n);return c({queryKey:["workreportimages",e],queryFn:async()=>{if(!n||!a.includes(n))throw new Error("not allowed to fetch this data");if(!w)throw new Error("API instance not found for role");return await p({projectId:e,id:o,date:r,dailyTaskId:t,api:w})},enabled:!!e&&!!n})};export{q as a,A as b,R as c,E as u};
