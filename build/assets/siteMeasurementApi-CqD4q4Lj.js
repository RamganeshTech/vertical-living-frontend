import{h as s,i as w,k as u,q as c,l as i}from"./index-ogMTmcqi.js";const m=async({projectId:n,siteDetails:e,api:t})=>{const{data:o}=await t.post(`/sitemeasurement/createmeasurement/${n}`,{siteDetails:e});if(!o.ok)throw new Error(o.message);return o.data},d=async({projectId:n,room:e,api:t})=>{const{data:o}=await t.post(`/sitemeasurement/createroom/${n}`,{room:e});if(!o.ok)throw new Error(o.message);return o.data},f=async({projectId:n,api:e})=>{const{data:t}=await e.get(`/sitemeasurement/getmeasurement/${n}`);if(!t.ok)throw new Error(t.message);return t.data},p=async({projectId:n,api:e,payload:t})=>{const{data:o}=await e.put(`/sitemeasurement/updatecommonmeasurement/${n}`,t);if(!o.ok)throw new Error(o.message);return o.data},h=async({projectId:n,api:e,roomId:t,room:o})=>{const{data:a}=await e.put(`/sitemeasurement/updateroommeasurement/${n}/${t}`,{room:o});if(!a.ok)throw new Error(a.message);return a.data},y=async({projectId:n,api:e})=>{const{data:t}=await e.put(`/sitemeasurement/completionstatus/${n}`);if(!t.ok)throw new Error(t.message);return t.data},E=async({projectId:n,roomId:e,api:t})=>{const{data:o}=await t.patch(`/sitemeasurement/deleteroom/${n}/${e}`);if(!o.ok)throw new Error(o.message);return o.data},S=async({projectId:n,api:e})=>{const{data:t}=await e.put(`/sitemeasurement/deletesitemeasurement/${n}`);if(!t.ok)throw new Error(t.message);return t.data},R=async({formId:n,projectId:e,deadLine:t,api:o})=>{const{data:a}=await o.put(`/sitemeasurement/deadline/${e}/${n}`,{deadLine:t});if(!a.ok)throw new Error(a.message);return a.data},M=async({formId:n,files:e,api:t,projectId:o})=>{const a=new FormData;return e.forEach(l=>a.append("file",l)),(await t.post(`/sitemeasurement/upload/multiple/${o}/${n}`,a,{headers:{"Content-Type":"multipart/form-data"}})).data},k=async(n,e,t)=>{const{data:o}=await t.patch(`/sitemeasurement/${n}/deleteuploadedfile/${e}`);if(!o.ok)throw new Error(o.message);return o.data},q=()=>{const{role:n}=s(),e=i(n),t=["owner","staff","CTO","client"];return u({mutationFn:async({projectId:o,fileId:a})=>{if(!n||!t.includes(n))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance not found for role");return await k(o,a,e)},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},v=({projectId:n})=>{const e=["owner","staff","CTO","client"],{role:t}=s(),o=i(t);return w({queryKey:["siteMeasurement",n],queryFn:async()=>{if(!t||!e.includes(t))throw new Error("not allowed to make this api call");if(!o)throw new Error("API instance not found for role");return await f({projectId:n,api:o})},retry:!1})},T=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,siteDetails:a})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await m({projectId:o,api:t,siteDetails:a})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},A=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,room:a})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await d({projectId:o,api:t,room:a})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},K=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,payload:a})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await p({projectId:o,api:t,payload:a})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},O=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,roomId:a,room:r})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await h({projectId:o,api:t,roomId:a,room:r})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},Q=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await y({projectId:o,api:t})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},D=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,roomId:a})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await E({projectId:o,api:t,roomId:a})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},_=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await S({projectId:o,api:t})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},I=()=>{const n=["owner","staff","CTO"],{role:e}=s(),t=i(e);return u({mutationFn:async({formId:o,projectId:a,deadLine:r})=>{if(!e)throw new Error("not authorized");if(!n.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await R({formId:o,deadLine:r,projectId:a,api:t})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},P=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({formId:o,files:a,projectId:r})=>{if(!e)throw new Error("not authorized");if(!n.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await M({formId:o,files:a,projectId:r,api:t})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},F=async({roomId:n,files:e,api:t,projectId:o})=>(await t.post(`/sitemeasurement/uploadroom/${o}/${n}`,e,{headers:{"Content-Type":"multipart/form-data"}})).data,C=async({roomId:n,uploadId:e,api:t,projectId:o})=>(await t.delete(`/sitemeasurement/deleteroom/${o}/${n}/${e}`)).data,g=async({projectId:n,roomId:e,uploadId:t,categoryName:o,api:a})=>{const{data:r}=await a.patch(`/sitemeasurement/updateimgname/${n}/${e}/${t}`,{categoryName:o});if(!r.ok)throw new Error(r.message);return r.data},U=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({roomId:o,files:a,projectId:r})=>{if(!e)throw new Error("not authorized");if(!n.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await F({roomId:o,files:a,projectId:r,api:t})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},z=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({roomId:o,uploadId:a,projectId:r})=>{if(!e)throw new Error("not authorized");if(!n.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await C({roomId:o,uploadId:a,projectId:r,api:t})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})},N=()=>{const n=["owner","staff","CTO"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:o,roomId:a,uploadId:r,categoryName:l})=>{if(!e||!n.includes(e))throw new Error("Not allowed to make this API call");if(!t)throw new Error("API instance not found for role");return await g({projectId:o,roomId:a,uploadId:r,categoryName:l,api:t})},onSuccess:(o,{projectId:a})=>{c.invalidateQueries({queryKey:["siteMeasurement",a]})}})};export{z as a,N as b,U as c,T as d,A as e,K as f,O as g,D as h,_ as i,Q as j,I as k,P as l,q as m,v as u};
