import{u as s,a as f,b as u,q as c,g as l}from"./index-CbQCFZwb.js";import{u as h}from"./useInfiniteQuery-KBKik7zw.js";const E=async({organizationId:e,page:r=1,limit:t=10,name:o,email:a,phone:n,empRole:d,status:p,department:m,api:y})=>{const{data:w}=await y.get("/department/hr/getallemployee",{params:{organizationId:e,page:r,limit:t,name:o,email:a,phone:n,empRole:d,department:m,status:p}});if(!w.ok)throw new Error(w.message);return w},g=async({empId:e,api:r})=>{const{data:t}=await r.get(`/department/hr/getsingle/${e}`);if(!t.ok)throw new Error(t.message);return t.data},k=async({formData:e,api:r})=>{const{data:t}=await r.post("/department/hr/createemployee",e);if(!t.ok)throw new Error(t.message);return t.data},P=async({empId:e,updates:r,api:t})=>{const{data:o}=await t.put(`/department/hr/update/${e}`,r);if(!o.ok)throw new Error(o.message);return o.data},q=async({empId:e,api:r})=>{const{data:t}=await r.delete(`/department/hr/deleteemployee/${e}`);if(!t.ok)throw new Error(t.message);return t.data},F=async({empId:e,type:r,file:t,api:o})=>{const a=new FormData;a.append("file",t),a.append("type",r);const{data:n}=await o.post(`/department/hr/${e}/uploaddocument`,a,{headers:{"Content-Type":"multipart/form-data"}});if(!n.ok)throw new Error(n.message);return n.data},A=async({empId:e,docId:r,api:t})=>{const{data:o}=await t.delete(`/department/hr/${e}/deletedocument/${r}`);if(!o.ok)throw new Error(o.message);return o.data},i=["owner","staff","CTO"],Q=(e,r)=>{const{role:t}=s(),o=l(t);return h({queryKey:["hr","employees",e,{...r}],enabled:!!e&&!!t,initialPageParam:1,queryFn:async({pageParam:a=1})=>{if(!t||!i.includes(t))throw new Error("Not allowed");if(!o)throw new Error("API instance not found for role");return await E({organizationId:e,api:o,...r})},getNextPageParam:a=>{const{page:n,totalPages:d}=a.pagination;return n<d?n+1:void 0},retry:!1,refetchOnWindowFocus:!1})},v=e=>{const{role:r}=s(),t=l(r);return f({queryKey:["hr","employee",e],queryFn:async()=>{if(!r||!i.includes(r))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await g({empId:e,api:t})},enabled:!!e&&!!r,retry:!1,refetchOnWindowFocus:!1})},S=()=>{const{role:e}=s(),r=l(e);return u({mutationFn:async({formData:t})=>{if(!e||!i.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await k({formData:t,api:r})},onSuccess:()=>{c.invalidateQueries({queryKey:["hr","employees"]})}})},$=()=>{const{role:e}=s(),r=l(e);return u({mutationFn:async({empId:t,updates:o})=>{if(!e||!i.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await P({empId:t,updates:o,api:r})},onSuccess:(t,{empId:o})=>{c.invalidateQueries({queryKey:["hr","employee",o]}),c.invalidateQueries({queryKey:["hr","employees"]})}})},I=()=>{const{role:e}=s(),r=l(e);return u({mutationFn:async({empId:t})=>{if(!e||!i.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await q({empId:t,api:r})},onSuccess:()=>{c.invalidateQueries({queryKey:["hr","employees"]})}})},b=()=>{const{role:e}=s(),r=l(e);return u({mutationFn:async({empId:t,type:o,file:a})=>{if(!e||!i.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await F({empId:t,type:o,file:a,api:r})},onSuccess:(t,{empId:o})=>{c.invalidateQueries({queryKey:["hr","employee",o]})}})},R=()=>{const{role:e}=s(),r=l(e);return u({mutationFn:async({empId:t,docId:o})=>{if(!e||!i.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await A({empId:t,docId:o,api:r})},onSuccess:(t,{empId:o})=>{c.invalidateQueries({queryKey:["hr","employee",o]})}})};export{$ as a,I as b,b as c,R as d,S as e,Q as f,v as u};
