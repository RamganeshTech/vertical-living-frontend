import{g as a,h as i,i as d,q as s,k as r}from"./index-B0PFb3Ci.js";const c=["owner","CTO","staff"],w=async({organizationId:e,api:t,filters:n})=>{const o=new URLSearchParams;e&&o.append("organizationId",e),n!=null&&n.projectId&&o.append("projectId",n.projectId),n!=null&&n.fromDept&&o.append("fromDept",n.fromDept),n!=null&&n.status&&o.append("status",n.status);const{data:u}=await t.get(`/department/accounting/getaccountingall?${o.toString()}`);if(!u.ok)throw new Error(u.message);return u.data},l=async({id:e,api:t})=>{const{data:n}=await t.get(`/department/accounting/single/${e}`);if(!n.ok)throw new Error(n.message);return n.data},p=async({id:e,payload:t,api:n})=>{const{data:o}=await n.put(`/department/accounting/update/${e}`,t);if(!o.ok)throw new Error(o.message);return o.updated},g=async({id:e,api:t})=>{const{data:n}=await t.delete(`/department/accounting/delete/${e}`);if(!n.ok)throw new Error(n.message);return n.deleted},A=(e,t)=>{const{role:n}=a(),o=r(n);return i({queryKey:["accounting","all",e,t],queryFn:async()=>{if(!n||!c.includes(n))throw new Error("Not allowed");if(!o)throw new Error("API instance not found for role");return await w({organizationId:e,api:o,filters:t})},enabled:!!e&&!!n&&!!o})},m=e=>{const{role:t}=a(),n=r(t);return i({queryKey:["accounting","single"],queryFn:async()=>{if(!t||!c.includes(t))throw new Error("Not allowed");if(!n)throw new Error("API instance not found for role");return await l({id:e,api:n})},enabled:!!e&&!!t&&!!n})},h=()=>{const{role:e}=a(),t=r(e);return d({mutationFn:async({id:n,payload:o})=>{if(!e||!c.includes(e))throw new Error("Not allowed");if(!t)throw new Error("API instance not found for role");return await p({id:n,payload:o,api:t})},onSuccess:()=>{s.invalidateQueries({queryKey:["accounting","all"],exact:!1}),s.invalidateQueries({queryKey:["accounting","single"]})}})},f=()=>{const{role:e}=a(),t=r(e);return d({mutationFn:async({id:n})=>{if(!e||!c.includes(e))throw new Error("Not allowed");if(!t)throw new Error("API instance not found for role");return await g({id:n,api:t})},onSuccess:()=>{s.invalidateQueries({queryKey:["accounting","all"]})}})};export{A as a,m as b,h as c,f as u};
