import{u}from"./useQuery-BSXZQ8G2.js";import{u as s}from"./useMutation-Deoeq1CZ.js";import{c as a,q as i}from"./index-CluF71pO.js";import{g as n}from"./roleCheck-C6Z-poLV.js";const l=async({api:e,projectData:t,orgsId:r})=>{try{let{data:o}=await e.post(`/project/createproject/${r}`,t);if(o.ok)return o}catch(o){throw o}},w=async({orgsId:e,api:t})=>{try{let{data:r}=await t.get(`/project/getprojects/${e}`);return r.ok?r.data:[]}catch(r){throw r}},d=async(e,t)=>{try{let{data:r}=await t.delete(`/project/deleteproject/${e}`);if(r.ok)return r.data}catch(r){throw r}},f=async({projectId:e,formData:t,api:r})=>{try{let{data:o}=await r.put(`/project/updateproject/${e}`,t);if(o.ok)return o}catch(o){throw o}},m=e=>{const{role:t}=a(),r=n(t),o=["owner","staff","CTO","worker","client"];return u({queryKey:["project"],queryFn:async()=>{if(!t)throw new Error("Not Allowed");if(!o.includes(t))throw new Error("Not Allowed");if(!r)throw new Error("API not found");return await w({orgsId:e,api:r})},enabled:!!t,refetchOnWindowFocus:!1,retry:!1})},A=()=>{const{role:e}=a(),t=n(e),r=["owner","staff","CTO"];return s({mutationFn:async({projectData:o,orgsId:c})=>{if(!e)throw new Error("Not Authrorized");if(!r.includes(e))throw new Error("Not Allowed to make api calls");if(!t)throw new Error("API not found");return await l({api:t,orgsId:c,projectData:o})},onSuccess:()=>{i.invalidateQueries({queryKey:["project"]})}})},E=()=>{const{role:e}=a(),t=n(e),r=["owner","CTO"];return s({mutationFn:async o=>{if(!e)throw new Error("Not Authrorized");if(!r.includes(e))throw new Error("Not Allowed to make api calls");if(!t)throw new Error("API not found");return await d(o,t)},onSuccess:()=>{i.invalidateQueries({queryKey:["project"]})}})},P=()=>{const{role:e}=a(),t=n(e),r=["owner","staff","CTO"];return s({mutationFn:async({projectId:o,formData:c})=>{if(!e)throw new Error("Not Authrorized");if(!r.includes(e))throw new Error("Not Allowed to make api calls");if(!t)throw new Error("API not found");return await f({projectId:o,formData:c,api:t})},onSuccess:()=>{i.invalidateQueries({queryKey:["project"]})}})};export{A as a,P as b,E as c,m as u};
