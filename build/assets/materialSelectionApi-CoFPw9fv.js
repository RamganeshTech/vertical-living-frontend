import{u as s,f as c}from"./index-Di9fivK2.js";import{g as l}from"./roleCheck-CZ0YkMwP.js";import{u as w}from"./useQuery-D3U2IXUF.js";import{u}from"./useMutation-Br_DKCOJ.js";const m=async({projectId:o,api:e})=>{const{data:t}=await e.get(`/materialconfirmation/${o}`);if(!t.ok)throw new Error(t.message);return t.data},f=async({projectId:o,roomId:e,api:t})=>{const{data:a}=await t.get(`/materialconfirmation/${o}/singleroom/${e}`);if(!a.ok)throw new Error(a.message);return a.data},d=async({projectId:o,roomId:e,api:t})=>{const{data:a}=await t.patch(`/materialconfirmation/${o}/${e}/deleteroom`);if(!a.ok)throw new Error(a.message);return a.data},y=async({projectId:o,roomId:e,formData:t,api:a})=>{const{data:r}=await a.post(`/materialconfirmation/${o}/uploads/${e}`,t);if(!r.ok)throw new Error(r.message);return r.data},h=async({projectId:o,roomId:e,fileId:t,api:a})=>{const{data:r}=await a.patch(`/materialconfirmation/${o}/deleteuploadedfile/${e}/${t}`);if(!r.ok)throw new Error(r.message);return r.data},p=async({formId:o,projectId:e,deadLine:t,api:a})=>{const{data:r}=await a.put(`/materialconfirmation/deadline/${e}/${o}`,{deadLine:t});if(!r.ok)throw new Error(r.message);return r.data},g=async({projectId:o,api:e})=>{const{data:t}=await e.put(`/materialconfirmation/completionstatus/${o}`);if(!t.ok)throw new Error(t.message);return t.data},q=o=>{const e=["owner","staff","CTO","client","worker"],{role:t}=s(),a=l(t);return w({queryKey:["material-confirmation",o],queryFn:async()=>{if(!t||!e.includes(t))throw new Error("Not authorized");if(!a)throw new Error("API instance not available");return await m({projectId:o,api:a})},enabled:!!o,refetchOnWindowFocus:!1,retry:!1})},A=({projectId:o,roomId:e})=>{const t=["owner","staff","CTO","client","worker"],{role:a}=s(),r=l(a);return w({queryKey:["material-room",o,e],queryFn:async()=>{if(!a||!t.includes(a))throw new Error("Not authorized");if(!r)throw new Error("API instance unavailable");return await f({projectId:o,roomId:e,api:r})},enabled:!!o&&!!e,retry:!1,refetchOnWindowFocus:!1})},S=()=>{const o=["owner","staff","CTO"],{role:e}=s(),t=l(e),a=c();return u({mutationFn:async({projectId:r,roomId:n})=>{if(!e||!o.includes(e))throw new Error("Not authorized");if(!t)throw new Error("API instance not available");return await d({projectId:r,roomId:n,api:t})},onSuccess:(r,{projectId:n})=>{a.invalidateQueries({queryKey:["material-confirmation",n]})}})},$=()=>{const o=["owner","staff","CTO"],{role:e}=s(),t=l(e),a=c();return u({mutationFn:async({projectId:r,roomId:n,formData:i})=>{if(!e||!o.includes(e))throw new Error("Not authorized");if(!t)throw new Error("API instance missing");return await y({projectId:r,roomId:n,formData:i,api:t})},onSuccess:(r,{projectId:n,roomId:i})=>{a.invalidateQueries({queryKey:["material-room",n,i]})}})},M=()=>{const o=["owner","staff","CTO"],{role:e}=s(),t=l(e),a=c();return u({mutationFn:async({projectId:r,roomId:n,fileId:i})=>{if(!e||!o.includes(e))throw new Error("Not authorized");if(!t)throw new Error("API instance missing");return await h({projectId:r,roomId:n,fileId:i,api:t})},onSuccess:(r,{projectId:n,roomId:i})=>{a.invalidateQueries({queryKey:["material-room",n,i]})}})},P=()=>{const o=["owner","staff","CTO"],{role:e}=s(),t=l(e),a=c();return u({mutationFn:async({formId:r,projectId:n,deadLine:i})=>{if(!e||!o.includes(e))throw new Error("Not authorized");if(!t)throw new Error("API instance missing");return await p({formId:r,projectId:n,deadLine:i,api:t})},onSuccess:()=>{a.invalidateQueries({queryKey:["material-rooms"]})}})},k=()=>{const o=["owner","staff","CTO"],{role:e}=s(),t=l(e),a=c();return u({mutationFn:async({projectId:r})=>{if(!e||!o.includes(e))throw new Error("Not authorized");if(!t)throw new Error("API instance missing");return await g({projectId:r,api:t})},onSuccess:(r,{projectId:n})=>{a.invalidateQueries({queryKey:["material-confirmation",n]})}})};export{M as a,A as b,S as c,q as d,P as e,k as f,$ as u};
