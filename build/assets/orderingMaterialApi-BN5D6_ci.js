import{m as i,n as w,o as l,ah as c,q as m,v as s,ai as y}from"./index-JxDlpqED.js";const u=["owner","staff","CTO"],f=async(e,r,t)=>{const{data:a}=await t.put(`/orderingmaterial/${e}/shop`,r);if(!a.ok)throw new Error(a.message);return a.data},b=()=>{const{role:e}=i(),r=s(e),t=c();return l({mutationFn:async({projectId:a,updates:n})=>{if(!e||!u.includes(e))throw new Error("Not allowed to update shop details");if(!r)throw new Error("API instance not available");return await f(a,n,r)},onSuccess:(a,{projectId:n})=>{t.invalidateQueries({queryKey:["ordering-material",n]})}})},g=async(e,r,t)=>{const{data:a}=await t.put(`/orderingmaterial/${e}/delivery-location`,r);if(!a.ok)throw new Error(a.message);return a.data},R=()=>{const{role:e}=i(),r=s(e),t=c();return l({mutationFn:async({projectId:a,updates:n})=>{if(!e||!u.includes(e))throw new Error("Not allowed to update delivery location");if(!r)throw new Error("API instance not available");return await g(a,n,r)},onSuccess:(a,{projectId:n})=>{t.invalidateQueries({queryKey:["ordering-material",n]})}})},p=async(e,r,t,a,n)=>{const{data:o}=await n.put(`/orderingmaterial/${e}/room/${t}/${r}`,{items:a});if(!o.ok)throw new Error(o.message);return o.data},C=()=>{const{role:e}=i(),r=s(e),t=c();return l({mutationFn:async({projectId:a,roomKey:n,itemId:o,updates:d})=>{if(!e||!u.includes(e))throw new Error("Not allowed to update room materials");if(!r)throw new Error("API instance not available");return await p(a,n,o,d,r)},onSuccess:(a,{projectId:n,roomKey:o})=>{t.invalidateQueries({queryKey:["ordering-material",n,o]})}})},h=async(e,r,t,a)=>{const{data:n}=await a.post(`/orderingmaterial/${e}/room/${r}/add`,t);if(!n.ok)throw new Error(n.message);return n.data},F=()=>{const{role:e}=i(),r=s(e);return l({mutationFn:async({projectId:t,roomKey:a,newItem:n})=>{if(!e||!u.includes(e))throw new Error("Not allowed to add item");if(!r)throw new Error("API instance not available");return await h(t,a,n,r)},onSuccess:(t,{projectId:a,roomKey:n})=>{m.invalidateQueries({queryKey:["ordering-material",a,n]})}})},E=async(e,r,t,a)=>{const{data:n}=await a.delete(`/orderingmaterial/${e}/room/${r}/${t}`);if(!n.ok)throw new Error(n.message);return n.data},P=()=>{const{role:e}=i(),r=s(e),t=c();return l({mutationFn:async({projectId:a,roomKey:n,itemId:o})=>{if(!e||!u.includes(e))throw new Error("Not allowed to delete item");if(!r)throw new Error("API instance not available");return await E(a,n,o,r)},onSuccess:(a,{projectId:n,roomKey:o})=>{t.invalidateQueries({queryKey:["ordering-material",n,o]})}})},A=async(e,r)=>{const{data:t}=await r.get(`/orderingmaterial/${e}`);if(!t.ok)throw new Error(t.message);return t.data},S=e=>{const r=["owner","staff","CTO","worker","client"],{role:t}=i(),a=s(t);return w({queryKey:["ordering-material",e],queryFn:async()=>{if(!t||!r.includes(t))throw new Error("Not allowed to fetch ordering material");if(!a)throw new Error("API not available");return await A(e,a)},enabled:!!t&&!!e&&!!a,retry:!1,refetchOnMount:!1})},M=async(e,r,t)=>{const{data:a}=await t.get(`/orderingmaterial/${e}/room/${r}`);if(!a.ok)throw new Error(a.message);return a.data},D=(e,r)=>{const t=["owner","staff","CTO","worker","client"],{role:a}=i(),n=s(a);return w({queryKey:["ordering-material",e,r],queryFn:async()=>{if(!a||!t.includes(a))throw new Error("Not allowed to fetch room materials");if(!n)throw new Error("API not available");return await M(e,r,n)},enabled:!!a&&!!e&&!!r&&!!n,retry:!1,refetchOnMount:!1})},q=async(e,r)=>{const{data:t}=await r.post(`/orderingmaterial/${e}/generate-link`);if(!t.ok)throw new Error(t.message);return t.data},O=async(e,r)=>{const{data:t}=await y.get(`https://houseofram.in/api/orderingmaterial/public/${e}/${r}`);if(!t.ok)throw new Error(t.message);return t.data},I=()=>{const{role:e}=i(),r=s(e);return l({mutationFn:async({projectId:t})=>{if(!e||!u.includes(e))throw new Error("Not allowed to generate link");if(!r)throw new Error("API instance not found");return await q(t,r)}})},Q=(e,r)=>w({queryKey:["ordering-material-public",e,r],queryFn:async()=>await O(e,r),enabled:!!e&&!!r,retry:!1,refetchOnMount:!1}),$=async({formId:e,projectId:r,deadLine:t,api:a})=>{const{data:n}=await a.put(`/orderingmaterial/deadline/${r}/${e}`,{deadLine:t});if(!n.ok)throw new Error(n.message);return n.data},v=async({projectId:e,api:r})=>{const{data:t}=await r.put(`/orderingmaterial/completionstatus/${e}`);if(!t.ok)throw new Error(t.message);return t.data},K=()=>{const e=["owner","staff","CTO"],{role:r}=i(),t=s(r),a=c();return l({mutationFn:async({formId:n,projectId:o,deadLine:d})=>{if(!r||!e.includes(r))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance missing");return await $({formId:n,projectId:o,deadLine:d,api:t})},onSuccess:(n,o)=>{a.invalidateQueries({queryKey:["ordering-material",o.formId]})}})},N=()=>{const e=["owner","staff","CTO"],{role:r}=i(),t=s(r),a=c();return l({mutationFn:async({projectId:n})=>{if(!r||!e.includes(r))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance missing");return await v({projectId:n,api:t})},onSuccess:(n,{projectId:o})=>{a.invalidateQueries({queryKey:["ordering-material",o]})}})};export{I as a,b,R as c,K as d,N as e,D as f,F as g,C as h,P as i,Q as j,S as u};
