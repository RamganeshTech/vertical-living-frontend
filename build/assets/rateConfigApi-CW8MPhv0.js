import{h as n,i as l,k as i,q as c,l as s}from"./index-D4FmOK8C.js";const w=async({api:o,body:t})=>{const{data:e}=await o.post("/quote/rateconfig/categories",t);if(!e.ok)throw new Error(e.message);return e.data},E=()=>{const o=["owner","CTO","staff"],{role:t}=n(),e=s(t);return i({mutationFn:async r=>{if(!t||!o.includes(t))throw new Error("Not allowed to make this API call");if(!e)throw new Error("API instance not found for role");return await w({api:e,body:r})},onSuccess:(r,{organizationId:a})=>{c.invalidateQueries({queryKey:["rateconfig","categories",a]})}})},f=async({api:o,organizationId:t})=>{const{data:e}=await o.get(`/quote/rateconfig/categories/${t}`);if(!e.ok)throw new Error(e.message);return e.data},C=o=>{const t=["owner","CTO","staff"],{role:e}=n(),r=s(e);return l({queryKey:["rateconfig","categories",o],queryFn:async()=>{if(!e||!t.includes(e))throw new Error("Not allowed to fetch this data");if(!r)throw new Error("API instance not found for role");return await f({api:r,organizationId:o})},enabled:!!o})},d=async({api:o,categoryId:t})=>{const{data:e}=await o.delete(`/quote/rateconfig/categories/${t}`);if(!e.ok)throw new Error(e.message);return e.data},q=()=>{const o=["owner","CTO","staff"],{role:t}=n(),e=s(t);return i({mutationFn:async({categoryId:r})=>{if(!t||!o.includes(t))throw new Error("Not allowed to make this API call");if(!e)throw new Error("API instance not found for role");return await d({api:e,categoryId:r})},onSuccess:(r,{organizationId:a})=>{c.invalidateQueries({queryKey:["rateconfig","categories",a]})}})},g=async({api:o,categoryId:t,organizationId:e,items:r})=>{const{data:a}=await o.post(`/quote/rateconfig/categories/${e}/${t}/items`,{items:r});if(!a.ok)throw new Error(a.message);return a.data},I=()=>{const o=["owner","CTO","staff"],{role:t}=n(),e=s(t);return i({mutationFn:async({categoryId:r,organizationId:a,items:u})=>{if(!t||!o.includes(t))throw new Error("Not allowed to make this API call");if(!e)throw new Error("API instance not found for role");return await g({api:e,categoryId:r,items:u,organizationId:a})},onSuccess:(r,{categoryId:a})=>{c.invalidateQueries({queryKey:["rateconfig","items",a]})}})},y=async({api:o,categoryId:t})=>{const{data:e}=await o.get(`/quote/rateconfig/categories/${t}/items`);if(!e.ok)throw new Error(e.message);return e.data},k=o=>{const t=["owner","CTO","staff"],{role:e}=n(),r=s(e);return l({queryKey:["rateconfig","items",o],queryFn:async()=>{if(!e||!t.includes(e))throw new Error("Not allowed to fetch this data");if(!r)throw new Error("API instance not found for role");return await y({api:r,categoryId:o})},enabled:!!o})},m=async({api:o,itemId:t})=>{const{data:e}=await o.delete(`/quote/rateconfig/items/${t}`);if(!e.ok)throw new Error(e.message);return e.data},p=()=>{const o=["owner","CTO","staff"],{role:t}=n(),e=s(t);return i({mutationFn:async({itemId:r})=>{if(!t||!o.includes(t))throw new Error("Not allowed to make this API call");if(!e)throw new Error("API instance not found for role");return await m({api:e,itemId:r})},onSuccess:(r,{categoryId:a})=>{c.invalidateQueries({queryKey:["rateconfig","items",a]})}})};export{E as a,q as b,k as c,I as d,p as e,C as u};
