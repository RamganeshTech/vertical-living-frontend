import{u as m}from"./useQuery-BPoeBSke.js";import{d as s,f as c}from"./index-DcYk0AxP.js";import{u as l}from"./useMutation-BbhnaANP.js";import{g as i}from"./roleCheck-D-Yu12LV.js";const w=async(e,n)=>(await n.get(`/paymentconfirmation/getpaymentconfirmation/${e}`)).data.data,f=async(e,n)=>(await n.put(`/paymentconfirmation/toggleconsent/${e}`)).data.data,y=async(e,n)=>(await n.post(`/paymentconfirmation/generatepayementconsentlink/${e}`)).data.data,p=async({projectId:e,token:n,api:t})=>(await t.post(`/paymentconfirmation/acceptconsent/${e}/${n}`)).data.data,E=e=>{const n=["CTO","owner","staff","client"],{role:t}=s(),a=i(t);return m({enabled:!!e&&!!t,queryKey:["payment-confirmation",e],queryFn:async()=>{if(!t||!n.includes(t))throw new Error("Not allowed");if(!a)throw new Error("API instance missing");return await w(e,a)},retry:!1,refetchOnMount:!1})},P=()=>{const e=["CTO","owner","staff"],{role:n}=s(),t=i(n),a=c();return l({mutationFn:async({projectId:o})=>{if(!n||!e.includes(n))throw new Error("Not allowed");if(!t)throw new Error("API instance missing");return await f(o,t)},onSuccess:(o,{projectId:r})=>{a.invalidateQueries({queryKey:["payment-confirmation",r]})}})},R=()=>{const e=["CTO","owner","staff"],{role:n}=s(),t=i(n),a=c();return l({mutationFn:async({projectId:o})=>{if(!n||!e.includes(n))throw new Error("Not allowed");if(!t)throw new Error("API instance missing");return await y(o,t)},onSuccess:(o,{projectId:r})=>{a.invalidateQueries({queryKey:["payment-confirmation",r]})}})},$=()=>{const e=["CTO","owner","staff","client"],{role:n}=s(),t=i(n),a=c();return l({mutationFn:async({projectId:o,token:r})=>{if(!n||!e.includes(n))throw new Error("Not allowed");if(!t)throw new Error("API instance missing");return await p({projectId:o,token:r,api:t})},onSuccess:(o,{projectId:r})=>{a.invalidateQueries({queryKey:["payment-confirmation",r]})}})},d=async({formId:e,projectId:n,deadLine:t,api:a})=>{const{data:o}=await a.put(`/paymentconfirmation/deadline/${n}/${e}`,{deadLine:t});if(!o.ok)throw new Error(o.message);return o.data},C=async({projectId:e,api:n})=>{const{data:t}=await n.put(`/paymentconfirmation/completionstatus/${e}`);if(!t.ok)throw new Error(t.message);return t.data},k=()=>{const e=["owner","staff","CTO"],{role:n}=s(),t=i(n),a=c();return l({mutationFn:async({formId:o,projectId:r,deadLine:u})=>{if(!n||!e.includes(n))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance missing");return await d({formId:o,projectId:r,deadLine:u,api:t})},onSuccess:()=>{a.invalidateQueries({queryKey:["payment-confirmation"]})}})},F=()=>{const e=["owner","staff","CTO"],{role:n}=s(),t=i(n),a=c();return l({mutationFn:async({projectId:o})=>{if(!n||!e.includes(n))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance missing");return await C({projectId:o,api:t})},onSuccess:(o,{projectId:r})=>{a.invalidateQueries({queryKey:["payment-confirmation",r]})}})};export{F as a,k as b,P as c,R as d,$ as e,E as u};
