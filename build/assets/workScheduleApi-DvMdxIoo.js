import{e as n,g as u,f as s,q as w,h as i,E as c}from"./index-HgTal7lb.js";const h=async(e,t)=>(await t.get(`/worktasks/getworktaksmain/${e}`)).data.data,k=async(e,t)=>(await t.get(`/worktasks/getdailyschedule/${e}`)).data.data,p=async(e,t)=>(await t.get(`/worktasks/${e}/getworkers`)).data.data,y=async(e,t,r)=>(await r.post(`/worktasks/${e}`,t)).data.data,m=async(e,t,r,a)=>(console.log("im gettng called update workd api "),(await a.put(`/worktasks/${e}/update/${t}`,r)).data.data),g=async(e,t,r)=>(await r.delete(`/worktasks/${e}/${t}`)).data.data,$=async(e,t,r,a)=>{const o=new FormData;return a.forEach(f=>{o.append("files",f)}),(await c.post(`https://houseofram.in/api/worktasks/${e}/${t}/uploads/${r}`,o,{headers:{"Content-Type":"multipart/form-data"}})).data},A=async({projectId:e,taskId:t,dateId:r,imageId:a})=>(await c.delete(`https://houseofram.in/api/worktasks/${e}/${t}/uploads/${r}/${a}`)).data,D=e=>{const{role:t}=n(),r=i(t),a=["owner","staff","CTO","worker","client"];return u({queryKey:["work-main-stage",e],queryFn:()=>{if(!t||!a.includes(t))throw new Error("Unauthorized");if(!r)throw new Error("API not found");return h(e,r)},enabled:!!e,retry:!1,refetchOnMount:!1})},F=e=>{const{role:t}=n(),r=i(t),a=["owner","staff","CTO","worker","client"];return u({queryKey:["daily-schedule",e],queryFn:()=>{if(!t||!a.includes(t))throw new Error("Unauthorized");if(!r)throw new Error("API not found");return k(e,r)},enabled:!!e,retry:!1,refetchOnMount:!1})},q=e=>{const{role:t}=n(),r=i(t),a=["owner","staff","CTO"];return u({queryKey:["project-workers",e],queryFn:()=>{if(!t||!a.includes(t))throw new Error("Unauthorized");if(!r)throw new Error("API not found");return p(e,r)},enabled:!!e,retry:!1,refetchOnMount:!1})},l=["owner","staff","CTO"],C=()=>{const{role:e}=n(),t=i(e);return s({mutationFn:async({projectId:r,formData:a})=>{if(!e||!l.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return y(r,a,t)}})},P=()=>{const{role:e}=n(),t=i(e);return s({mutationFn:async({projectId:r,taskId:a,formData:o})=>{if(!e||!l.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return m(r,a,o,t)}})},O=()=>{const{role:e}=n(),t=i(e);return s({mutationFn:async({projectId:r,taskId:a})=>{if(!e||!l.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return g(r,a,t)}})},U=()=>s({mutationFn:({projectId:e,taskId:t,dateId:r,files:a})=>$(e,t,r,a)}),R=()=>s({mutationFn:A}),E=async({formId:e,projectId:t,deadLine:r,api:a})=>{const{data:o}=await a.put(`/worktasks/deadline/${t}/${e}`,{deadLine:r});if(!o.ok)throw new Error(o.message);return o.data},S=async({projectId:e})=>{console.log("im gettng called complete workd api ");const{data:t}=await c.put(`https://houseofram.in/api/worktasks/completionstatus/${e}`);if(!t.ok)throw new Error(t.message);return t.data},z=()=>{const e=["owner","staff","CTO"],{role:t}=n(),r=i(t);return s({mutationFn:async({formId:a,projectId:o,deadLine:d})=>{if(!t||!e.includes(t))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance missing");return await E({formId:a,projectId:o,deadLine:d,api:r})},onSuccess:(a,{projectId:o})=>{w.invalidateQueries({queryKey:["work-main-stage",o]})}})},M=()=>s({mutationFn:async({projectId:e})=>await S({projectId:e}),onSuccess:(e,{projectId:t})=>{w.invalidateQueries({queryKey:["work-main-stage",t]})}});export{z as a,M as b,F as c,q as d,C as e,P as f,O as g,U as h,R as i,D as u};
