import{d as a,f as c,e as u,q as w,g as i}from"./index-Bp58Hj9Q.js";const d=async(e,t)=>(await t.get(`/worktasks/getworktaksmain/${e}`)).data.data,f=async(e,t)=>(await t.get(`/worktasks/getworkschedule/${e}`)).data.data,k=async(e,t)=>(await t.get(`/worktasks/getdailyschedule/${e}`)).data.data,h=async(e,t)=>(await t.get(`/worktasks/${e}/getworkers`)).data.data,y=async(e,t,r,o)=>(await o.post(`/worktasks/${r}/daily-task/${e}`,t)).data,p=async(e,t,r,o)=>(await o.post(`/worktasks/${r}/work-plan/${e}`,t)).data,A=async(e,t,r,o,n)=>(await n.put(`/worktasks/${r}/daily-task/${e}/${t}`,o)).data,E=async(e,t,r,o,n)=>(await n.put(`/worktasks/${r}/work-plan/${e}/${t}`,o)).data,m=async(e,t,r,o)=>(await o.delete(`/worktasks/${r}/daily-task/${e}/${t}`)).data,$=async(e,t,r,o)=>(await o.delete(`/worktasks/${r}/work-plan/${e}/${t}`)).data,g=async(e,t,r,o)=>(await o.post(`/worktasks/${r}/md-approval/${e}`,t)).data,P=async(e,t,r,o)=>(await o.patch(`/worktasks/${r}/daily-schedule/${e}/status`,t)).data,S=async(e,t,r,o)=>(await o.patch(`/worktasks/${r}/work-schedule/${e}/status`,t)).data,R=e=>{const{role:t}=a(),r=i(t),o=["owner","staff","CTO","worker","client"];return c({queryKey:["work-main-stage",e],queryFn:()=>{if(!t||!o.includes(t))throw new Error("Unauthorized");if(!r)throw new Error("API not found");return d(e,r)},enabled:!!e,retry:!1,refetchOnMount:!1})},U=e=>{const{role:t}=a(),r=i(t),o=["owner","staff","CTO","worker","client"];return c({queryKey:["work-schedule",e],queryFn:()=>{if(!t||!o.includes(t))throw new Error("Unauthorized");if(!r)throw new Error("API not found");return f(e,r)},enabled:!!e,retry:!1,refetchOnMount:!1})},C=e=>{const{role:t}=a(),r=i(t),o=["owner","staff","CTO","worker","client"];return c({queryKey:["daily-schedule",e],queryFn:()=>{if(!t||!o.includes(t))throw new Error("Unauthorized");if(!r)throw new Error("API not found");return k(e,r)},enabled:!!e,retry:!1,refetchOnMount:!1})},F=e=>{const{role:t}=a(),r=i(t),o=["owner","staff","CTO"];return c({queryKey:["project-workers",e],queryFn:()=>{if(!t||!o.includes(t))throw new Error("Unauthorized");if(!r)throw new Error("API not found");return h(e,r)},enabled:!!e,retry:!1,refetchOnMount:!1})},D=()=>{const{role:e}=a(),t=i(e),r=["owner","staff","CTO"];return u({mutationFn:async({dailyScheduleId:o,projectId:n,formData:s})=>{if(!e||!r.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return y(o,s,n,t)}})},z=()=>{const{role:e}=a(),t=i(e),r=["owner","staff","CTO"];return u({mutationFn:async({workScheduleId:o,formData:n,projectId:s})=>{if(!e||!r.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return p(o,n,s,t)}})},q=()=>{const{role:e}=a(),t=i(e),r=["owner","staff","CTO"];return u({mutationFn:async({dailyScheduleId:o,taskId:n,formData:s,projectId:l})=>{if(!e||!r.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return A(o,n,l,s,t)}})},M=()=>{const{role:e}=a(),t=i(e),r=["owner","staff","CTO"];return u({mutationFn:async({workScheduleId:o,planId:n,formData:s,projectId:l})=>{if(!e||!r.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return E(o,n,l,s,t)}})},I=()=>{const{role:e}=a(),t=i(e),r=["owner","staff","CTO"];return u({mutationFn:async({dailyScheduleId:o,taskId:n,projectId:s})=>{if(!e||!r.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return m(o,n,s,t)}})},K=()=>{const{role:e}=a(),t=i(e),r=["owner","staff","CTO"];return u({mutationFn:async({workScheduleId:o,planId:n,projectId:s})=>{if(!e||!r.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return $(o,n,s,t)}})},b=()=>{const{role:e}=a(),t=i(e),r=["owner"];return u({mutationFn:async({mainStageId:o,payload:n,projectId:s})=>{if(!e||!r.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return g(o,n,s,t)}})},v=()=>{const{role:e}=a(),t=i(e),r=["owner","staff","CTO"];return u({mutationFn:async({dailyScheduleId:o,payload:n,projectId:s})=>{if(!e||!r.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return P(o,n,s,t)}})},G=()=>{const{role:e}=a(),t=i(e),r=["owner","staff","CTO"];return u({mutationFn:async({workScheduleId:o,payload:n,projectId:s})=>{if(!e||!r.includes(e))throw new Error("Unauthorized");if(!t)throw new Error("API not found");return S(o,n,s,t)}})},T=async({formId:e,projectId:t,deadLine:r,api:o})=>{const{data:n}=await o.put(`/worktasks/deadline/${t}/${e}`,{deadLine:r});if(!n.ok)throw new Error(n.message);return n.data},O=async({projectId:e,api:t})=>{const{data:r}=await t.put(`/worktasks/completionstatus/${e}`);if(!r.ok)throw new Error(r.message);return r.data},Q=()=>{const e=["owner","staff","CTO"],{role:t}=a(),r=i(t);return u({mutationFn:async({formId:o,projectId:n,deadLine:s})=>{if(!t||!e.includes(t))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance missing");return await T({formId:o,projectId:n,deadLine:s,api:r})},onSuccess:()=>{w.invalidateQueries({queryKey:["material-rooms"]})}})},x=()=>{const e=["owner","staff","CTO"],{role:t}=a(),r=i(t);return u({mutationFn:async({projectId:o})=>{if(!t||!e.includes(t))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance missing");return await O({projectId:o,api:r})},onSuccess:(o,{projectId:n})=>{w.invalidateQueries({queryKey:["work-main-stage",n]})}})};export{Q as a,x as b,b as c,U as d,F as e,G as f,z as g,M as h,K as i,C as j,v as k,D as l,q as m,I as n,R as u};
