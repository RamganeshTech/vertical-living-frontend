import{d as h}from"./useQuery-DmDT-v30.js";import{d as s,q as w,u}from"./index-ftjmZ4WH.js";import{u as l}from"./useMutation-CSGCjuCw.js";import{g as i}from"./roleCheck-BuedAs3v.js";const d=async(r,t,e,o)=>{const{data:a}=await o.post(`/qualitycheck/${r}/${t}/item/create`,e);if(!a.ok)throw new Error(a.message);return a.data},m=async(r,t,e,o,a)=>{const{data:n}=await a.put(`/qualitycheck/${r}/${t}/${e}/item/edit`,o);if(!n.ok)throw new Error(n.message);return n.data},k=async(r,t,e,o)=>{console.log("deleteimnga the itesm");const{data:a}=await o.delete(`/qualitycheck/${r}/${t}/${e}/item/delete`);if(!a.ok)throw new Error(a.message);return a},f=async(r,t)=>{const{data:e}=await t.get(`/qualitycheck/${r}`);if(!e.ok)throw new Error(e.message);return e.data},$=()=>{const r=["owner","CTO","staff"],{role:t}=s(),e=i(t),o=u();return l({mutationFn:async({projectId:a,roomName:n,formData:c})=>{if(!t||!r.includes(t))throw new Error("Not allowed.");if(!e)throw new Error("can't make the call");return await d(a,n,c,e)},onSuccess:(a,{projectId:n})=>{o.invalidateQueries({queryKey:["quality-checkup",n]})}})},A=()=>{const r=["owner","CTO","staff"],{role:t}=s(),e=i(t),o=u();return l({mutationFn:async({projectId:a,roomName:n,itemId:c,formData:y})=>{if(!t||!r.includes(t))throw new Error("Not allowed.");if(!e)throw new Error("can't make the call");return await m(a,n,c,y,e)},onSuccess:(a,{projectId:n})=>{o.invalidateQueries({queryKey:["quality-checkup",n]})}})},R=()=>{const r=["owner","CTO","staff"],{role:t}=s(),e=i(t),o=u();return l({mutationFn:async({projectId:a,roomName:n,itemId:c})=>{if(!t||!r.includes(t))throw new Error("Not allowed.");if(!e)throw new Error("can't make the call");return await k(a,n,c,e)},onSuccess:(a,{projectId:n})=>{o.invalidateQueries({queryKey:["quality-checkup",n]})}})},F=r=>{const t=["owner","CTO","staff","worker"],{role:e}=s(),o=i(e);return h({queryKey:["quality-checkup",r],queryFn:async()=>{if(!e||!t.includes(e))throw new Error("Not allowed.");if(!o)throw new Error("can't make the call");return await f(r,o)},enabled:!!r,retry:!1,retryOnMount:!1})},p=async({formId:r,deadLine:t,projectId:e,api:o})=>{const{data:a}=await o.put(`/qualitycheck/deadline/${e}/${r}`,{deadLine:t});if(!a.ok)throw new Error(a.message);return a.data},C=async({projectId:r,api:t})=>{const{data:e}=await t.put(`/qualitycheck/completionstatus/${r}`);if(!e.ok)throw new Error(e.message);return e.data},O=()=>{const r=["owner","staff","CTO"],{role:t}=s(),e=i(t);return l({mutationFn:async({formId:o,deadLine:a,projectId:n})=>{if(!t||!r.includes(t))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance missing");return await p({formId:o,projectId:n,deadLine:a,api:e})},onSuccess:()=>{w.invalidateQueries({queryKey:["quality-checkup"]})}})},S=()=>{const r=["owner","staff","CTO"],{role:t}=s(),e=i(t);return l({mutationFn:async({projectId:o})=>{if(!t||!r.includes(t))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance missing");return await C({projectId:o,api:e})},onSuccess:(o,{projectId:a})=>{w.invalidateQueries({queryKey:["quality-checkup",a]})}})};export{O as a,S as b,$ as c,A as d,R as e,F as u};
