import{u as m}from"./useQuery-D3U2IXUF.js";import{u}from"./useMutation-Br_DKCOJ.js";import{g as s}from"./roleCheck-CZ0YkMwP.js";import{u as i,q as c}from"./index-Di9fivK2.js";const w=async({projectId:a,siteDetails:e,api:t})=>{const{data:o}=await t.post(`/sitemeasurement/createmeasurement/${a}`,{siteDetails:e});if(!o.ok)throw new Error(o.message);return o.data},d=async({projectId:a,room:e,api:t})=>{const{data:o}=await t.post(`/sitemeasurement/createroom/${a}`,{room:e});if(!o.ok)throw new Error(o.message);return o.data},f=async({projectId:a,api:e})=>{const{data:t}=await e.get(`/sitemeasurement/getmeasurement/${a}`);if(!t.ok)throw new Error(t.message);return t.data},p=async({projectId:a,api:e,payload:t})=>{const{data:o}=await e.put(`/sitemeasurement/updatecommonmeasurement/${a}`,t);if(!o.ok)throw new Error(o.message);return o.data},h=async({projectId:a,api:e,roomId:t,room:o})=>{const{data:r}=await e.put(`/sitemeasurement/updateroommeasurement/${a}/${t}`,{room:o});if(!r.ok)throw new Error(r.message);return r.data},y=async({projectId:a,api:e})=>{const{data:t}=await e.put(`/sitemeasurement/completionstatus/${a}`);if(!t.ok)throw new Error(t.message);return t.data},E=async({projectId:a,roomId:e,api:t})=>{const{data:o}=await t.patch(`/sitemeasurement/deleteroom/${a}/${e}`);if(!o.ok)throw new Error(o.message);return o.data},S=async({projectId:a,api:e})=>{const{data:t}=await e.put(`/sitemeasurement/deletesitemeasurement/${a}`);if(!t.ok)throw new Error(t.message);return t.data},R=async({formId:a,projectId:e,deadLine:t,api:o})=>{const{data:r}=await o.put(`/sitemeasurement/deadline/${e}/${a}`,{deadLine:t});if(!r.ok)throw new Error(r.message);return r.data},M=async({formId:a,files:e,api:t,projectId:o})=>{const r=new FormData;return e.forEach(l=>r.append("file",l)),(await t.post(`/sitemeasurement/upload/multiple/${o}/${a}`,r,{headers:{"Content-Type":"multipart/form-data"}})).data},k=async(a,e,t)=>{const{data:o}=await t.patch(`/sitemeasurement/${a}/deleteuploadedfile/${e}`);if(!o.ok)throw new Error(o.message);return o.data},A=()=>{const{role:a}=i(),e=s(a),t=["owner","staff","CTO","client"];return u({mutationFn:async({projectId:o,fileId:r})=>{if(!a||!t.includes(a))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance not found for role");return await k(o,r,e)},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},K=({projectId:a})=>{const e=["owner","staff","CTO","client"],{role:t}=i(),o=s(t);return m({queryKey:["siteMeasurement",a],queryFn:async()=>{if(!t||!e.includes(t))throw new Error("not allowed to make this api call");if(!o)throw new Error("API instance not found for role");return await f({projectId:a,api:o})},retry:!1})},O=()=>{const a=["owner","staff","CTO","client"],{role:e}=i(),t=s(e);return u({mutationFn:async({projectId:o,siteDetails:r})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await w({projectId:o,api:t,siteDetails:r})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},Q=()=>{const a=["owner","staff","CTO","client"],{role:e}=i(),t=s(e);return u({mutationFn:async({projectId:o,room:r})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await d({projectId:o,api:t,room:r})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},D=()=>{const a=["owner","staff","CTO","client"],{role:e}=i(),t=s(e);return u({mutationFn:async({projectId:o,payload:r})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await p({projectId:o,api:t,payload:r})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},_=()=>{const a=["owner","staff","CTO","client"],{role:e}=i(),t=s(e);return u({mutationFn:async({projectId:o,roomId:r,room:n})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await h({projectId:o,api:t,roomId:r,room:n})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},I=()=>{const a=["owner","staff","CTO","client"],{role:e}=i(),t=s(e);return u({mutationFn:async({projectId:o})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await y({projectId:o,api:t})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},P=()=>{const a=["owner","staff","CTO","client"],{role:e}=i(),t=s(e);return u({mutationFn:async({projectId:o,roomId:r})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await E({projectId:o,api:t,roomId:r})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},U=()=>{const a=["owner","staff","CTO","client"],{role:e}=i(),t=s(e);return u({mutationFn:async({projectId:o})=>{if(!e||!a.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await S({projectId:o,api:t})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},z=()=>{const a=["owner","staff","CTO"],{role:e}=i(),t=s(e);return u({mutationFn:async({formId:o,projectId:r,deadLine:n})=>{if(!e)throw new Error("not authorized");if(!a.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await R({formId:o,deadLine:n,projectId:r,api:t})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},N=()=>{const a=["owner","staff","CTO","client"],{role:e}=i(),t=s(e);return u({mutationFn:async({formId:o,files:r,projectId:n})=>{if(!e)throw new Error("not authorized");if(!a.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await M({formId:o,files:r,projectId:n,api:t})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},F=async({roomId:a,files:e,api:t,projectId:o})=>(await t.post(`/sitemeasurement/uploadroom/${o}/${a}`,e,{headers:{"Content-Type":"multipart/form-data"}})).data,g=async({roomId:a,uploadId:e,api:t,projectId:o})=>(await t.delete(`/sitemeasurement/deleteroom/${o}/${a}/${e}`)).data,C=async({projectId:a,roomId:e,uploadId:t,categoryName:o,api:r})=>{const{data:n}=await r.patch(`/sitemeasurement/updateimgname/${a}/${e}/${t}`,{categoryName:o});if(!n.ok)throw new Error(n.message);return n.data},G=()=>{const a=["owner","staff","CTO","client"],{role:e}=i(),t=s(e);return u({mutationFn:async({roomId:o,files:r,projectId:n})=>{if(!e)throw new Error("not authorized");if(!a.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await F({roomId:o,files:r,projectId:n,api:t})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},b=()=>{const a=["owner","staff","CTO","client"],{role:e}=i(),t=s(e);return u({mutationFn:async({roomId:o,uploadId:r,projectId:n})=>{if(!e)throw new Error("not authorized");if(!a.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await g({roomId:o,uploadId:r,projectId:n,api:t})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})},x=()=>{const a=["owner","staff","CTO"],{role:e}=i(),t=s(e);return u({mutationFn:async({projectId:o,roomId:r,uploadId:n,categoryName:l})=>{if(!e||!a.includes(e))throw new Error("Not allowed to make this API call");if(!t)throw new Error("API instance not found for role");return await C({projectId:o,roomId:r,uploadId:n,categoryName:l,api:t})},onSuccess:(o,{projectId:r})=>{c.invalidateQueries({queryKey:["siteMeasurement",r]})}})};export{b as a,x as b,G as c,O as d,Q as e,D as f,_ as g,P as h,U as i,I as j,z as k,N as l,A as m,K as u};
