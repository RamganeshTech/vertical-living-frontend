import{m as n,n as u,o as l,q as i,p as s}from"./index-BO7-A9Kz.js";const c=async({api:o,organizationId:r,id:t})=>{const{data:e}=await o.get(`quote/quotegenerate/getquotesingle/${r}/${t}`);if(!e.ok)throw new Error((e==null?void 0:e.message)||"Failed to fetch materials");return e.data},w=async({api:o,organizationId:r,filters:t})=>{const{data:e}=await o.get(`quote/quotegenerate/getquotes/${r}`,{params:t});if(!e.ok)throw new Error((e==null?void 0:e.message)||"Failed to fetch materials");return e.data},f=async({api:o,projectId:r})=>{const{data:t}=await o.get(`quote/quotegenerate/getquotepdf/quote/${r}`);if(!t.ok)throw new Error((t==null?void 0:t.message)||"Failed to fetch materials");return t.data},d=async({api:o,id:r})=>{const{data:t}=await o.delete(`quote/quotegenerate/deletequote/${r}`);if(!t.ok)throw new Error((t==null?void 0:t.message)||"Failed to delete materials");return t.data},q=async({api:o,quoteId:r,data:t})=>{var a;const e=await o.post(`quote/quotegenerate/generatepdf/${r}/create`,t);if(console.log("res form api",e.data),!(e!=null&&e.data.ok))throw new Error(((a=e==null?void 0:e.data)==null?void 0:a.message)||"Failed to delete materials");return e==null?void 0:e.data.data},m=(o,r)=>{const t=["owner","staff","CTO"],{role:e}=n(),a=s(e);return u({queryKey:["quote-variant-single",o,r],queryFn:async()=>{if(!e||!t.includes(e))throw new Error("Not allowed to create quotes");if(!a)throw new Error("API instance for role not found");return await c({api:a,organizationId:o,id:r})},enabled:!!o})},h=(o,r)=>{const t=["owner","staff","CTO"],{role:e}=n(),a=s(e);return u({queryKey:["quote-material-items",o,r],queryFn:async()=>{if(!e||!t.includes(e))throw new Error("Not allowed to create quotes");if(!a)throw new Error("API instance for role not found");return await w({api:a,organizationId:o,filters:r})},enabled:!!o})},E=o=>{const r=["owner","staff","CTO"],{role:t}=n(),e=s(t);return u({queryKey:["quote-pdfs",o],queryFn:async()=>{if(!t||!r.includes(t))throw new Error("Not allowed to create quotes");if(!e)throw new Error("API instance for role not found");return await f({api:e,projectId:o})},enabled:!!o})},y=async({api:o,organizationId:r,categoryName:t})=>{const{data:e}=await o.get(`quote/quotegenerate/getmaterials/${r}/${t}`);if(!e.ok)throw new Error((e==null?void 0:e.message)||"Failed to fetch materials");return e.data},p=(o,r)=>{const t=["owner","staff","CTO"],{role:e}=n(),a=s(e);return u({queryKey:["quote-brand",o,r],queryFn:async()=>{if(!e||!t.includes(e))throw new Error("Not allowed to create quotes");if(!a)throw new Error("API instance for role not found");return console.log("categrouName",r),await y({api:a,organizationId:o,categoryName:r})},enabled:!!o})},F=()=>{const o=["owner","staff","CTO"],{role:r}=n(),t=s(r);return l({mutationFn:async({id:e})=>{if(!r||!o.includes(r))throw new Error("Not allowed to create quotes");if(!t)throw new Error("API instance for role not found");return await d({api:t,id:e})},onSuccess:(e,{organizationId:a})=>{i.invalidateQueries({queryKey:["quote-material-items",a]})}})},Q=()=>{const o=["owner","staff","CTO"],{role:r}=n(),t=s(r);return l({mutationFn:async({quoteId:e,data:a})=>{if(!r||!o.includes(r))throw new Error("Not allowed to create quotes");if(!t)throw new Error("API instance for role not found");return await q({api:t,quoteId:e,data:a})},onSuccess:(e,{organizationId:a})=>{i.invalidateQueries({queryKey:["quote-material-items",a]})}})};export{m as a,p as b,Q as c,F as d,h as e,E as u};
