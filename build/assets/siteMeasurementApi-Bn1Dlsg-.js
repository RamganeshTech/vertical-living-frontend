import{u as s,a as w,b as u,q as c,g as i}from"./index-CbQCFZwb.js";const m=async({projectId:n,siteDetails:e,api:t})=>{const{data:a}=await t.post(`/sitemeasurement/createmeasurement/${n}`,{siteDetails:e});if(!a.ok)throw new Error(a.message);return a.data},d=async({projectId:n,room:e,api:t})=>{const{data:a}=await t.post(`/sitemeasurement/createroom/${n}`,{room:e});if(!a.ok)throw new Error(a.message);return a.data},f=async({projectId:n,api:e})=>{const{data:t}=await e.get(`/sitemeasurement/getmeasurement/${n}`);if(!t.ok)throw new Error(t.message);return t.data},p=async({projectId:n,api:e,payload:t})=>{const{data:a}=await e.put(`/sitemeasurement/updatecommonmeasurement/${n}`,t);if(!a.ok)throw new Error(a.message);return a.data},h=async({projectId:n,api:e,roomId:t,room:a})=>{const{data:o}=await e.put(`/sitemeasurement/updateroommeasurement/${n}/${t}`,{room:a});if(!o.ok)throw new Error(o.message);return o.data},y=async({projectId:n,api:e})=>{const{data:t}=await e.put(`/sitemeasurement/completionstatus/${n}`);if(!t.ok)throw new Error(t.message);return t.data},E=async({projectId:n,roomId:e,api:t})=>{const{data:a}=await t.patch(`/sitemeasurement/deleteroom/${n}/${e}`);if(!a.ok)throw new Error(a.message);return a.data},S=async({projectId:n,api:e})=>{const{data:t}=await e.put(`/sitemeasurement/deletesitemeasurement/${n}`);if(!t.ok)throw new Error(t.message);return t.data},R=async({formId:n,projectId:e,deadLine:t,api:a})=>{const{data:o}=await a.put(`/sitemeasurement/deadline/${e}/${n}`,{deadLine:t});if(!o.ok)throw new Error(o.message);return o.data},M=async({formId:n,files:e,api:t,projectId:a})=>{const o=new FormData;return e.forEach(l=>o.append("file",l)),(await t.post(`/sitemeasurement/upload/multiple/${a}/${n}`,o,{headers:{"Content-Type":"multipart/form-data"}})).data},k=async(n,e,t)=>{const{data:a}=await t.patch(`/sitemeasurement/${n}/deleteuploadedfile/${e}`);if(!a.ok)throw new Error(a.message);return a.data},q=()=>{const{role:n}=s(),e=i(n),t=["owner","staff","CTO","client"];return u({mutationFn:async({projectId:a,fileId:o})=>{if(!n||!t.includes(n))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance not found for role");return await k(a,o,e)},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},v=({projectId:n})=>{const e=["owner","staff","CTO","client"],{role:t}=s(),a=i(t);return w({queryKey:["siteMeasurement",n],queryFn:async()=>{if(!t||!e.includes(t))throw new Error("not allowed to make this api call");if(!a)throw new Error("API instance not found for role");return await f({projectId:n,api:a})},retry:!1})},T=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:a,siteDetails:o})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await m({projectId:a,api:t,siteDetails:o})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},A=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:a,room:o})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await d({projectId:a,api:t,room:o})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},K=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:a,payload:o})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await p({projectId:a,api:t,payload:o})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},O=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:a,roomId:o,room:r})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await h({projectId:a,api:t,roomId:o,room:r})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},Q=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:a})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await y({projectId:a,api:t})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},D=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:a,roomId:o})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await E({projectId:a,api:t,roomId:o})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},_=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:a})=>{if(!e||!n.includes(e))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await S({projectId:a,api:t})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},I=()=>{const n=["owner","staff","CTO"],{role:e}=s(),t=i(e);return u({mutationFn:async({formId:a,projectId:o,deadLine:r})=>{if(!e)throw new Error("not authorized");if(!n.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await R({formId:a,deadLine:r,projectId:o,api:t})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},P=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({formId:a,files:o,projectId:r})=>{if(!e)throw new Error("not authorized");if(!n.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await M({formId:a,files:o,projectId:r,api:t})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},F=async({roomId:n,files:e,api:t,projectId:a})=>(await t.post(`/sitemeasurement/uploadroom/${a}/${n}`,e,{headers:{"Content-Type":"multipart/form-data"}})).data,g=async({roomId:n,uploadId:e,api:t,projectId:a})=>(await t.delete(`/sitemeasurement/deleteroom/${a}/${n}/${e}`)).data,C=async({projectId:n,roomId:e,uploadId:t,categoryName:a,api:o})=>{const{data:r}=await o.patch(`/sitemeasurement/updateimgname/${n}/${e}/${t}`,{categoryName:a});if(!r.ok)throw new Error(r.message);return r.data},U=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({roomId:a,files:o,projectId:r})=>{if(!e)throw new Error("not authorized");if(!n.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await F({roomId:a,files:o,projectId:r,api:t})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},z=()=>{const n=["owner","staff","CTO","client"],{role:e}=s(),t=i(e);return u({mutationFn:async({roomId:a,uploadId:o,projectId:r})=>{if(!e)throw new Error("not authorized");if(!n.includes(e))throw new Error("you  dont have the access to make this api");if(!t)throw new Error("api is null");return await g({roomId:a,uploadId:o,projectId:r,api:t})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})},N=()=>{const n=["owner","staff","CTO"],{role:e}=s(),t=i(e);return u({mutationFn:async({projectId:a,roomId:o,uploadId:r,categoryName:l})=>{if(!e||!n.includes(e))throw new Error("Not allowed to make this API call");if(!t)throw new Error("API instance not found for role");return await C({projectId:a,roomId:o,uploadId:r,categoryName:l,api:t})},onSuccess:(a,{projectId:o})=>{c.invalidateQueries({queryKey:["siteMeasurement",o]})}})};export{z as a,N as b,U as c,T as d,A as e,K as f,O as g,D as h,_ as i,Q as j,I as k,P as l,q as m,v as u};
