import{i as P,h as v,k,d as s,q as d}from"./index-ftjmZ4WH.js";import{g as i}from"./roleCheck-BuedAs3v.js";import{Q as F,h as b,d as Q}from"./useQuery-DmDT-v30.js";import{u as f}from"./useMutation-CSGCjuCw.js";var R=class extends F{constructor(e,r){super(e,r)}bindMethods(){super.bindMethods(),this.fetchNextPage=this.fetchNextPage.bind(this),this.fetchPreviousPage=this.fetchPreviousPage.bind(this)}setOptions(e){super.setOptions({...e,behavior:P()})}getOptimisticResult(e){return e.behavior=P(),super.getOptimisticResult(e)}fetchNextPage(e){return this.fetch({...e,meta:{fetchMore:{direction:"forward"}}})}fetchPreviousPage(e){return this.fetch({...e,meta:{fetchMore:{direction:"backward"}}})}createResult(e,r){var g,E;const{state:t}=e,o=super.createResult(e,r),{isFetching:a,isRefetching:n,isError:u,isRefetchError:m}=o,l=(E=(g=t.fetchMeta)==null?void 0:g.fetchMore)==null?void 0:E.direction,p=u&&l==="forward",h=a&&l==="forward",w=u&&l==="backward",y=a&&l==="backward";return{...o,fetchNextPage:this.fetchNextPage,fetchPreviousPage:this.fetchPreviousPage,hasNextPage:k(r,t.data),hasPreviousPage:v(r,t.data),isFetchNextPageError:p,isFetchingNextPage:h,isFetchPreviousPageError:w,isFetchingPreviousPage:y,isRefetchError:m&&!p&&!w,isRefetching:n&&!h&&!y}}};function q(e,r){return b(e,R)}const x=async({organizationId:e,page:r=1,limit:t=10,name:o,email:a,phone:n,empRole:u,status:m,department:l,api:p})=>{const{data:h}=await p.get("/department/hr/getallemployee",{params:{organizationId:e,page:r,limit:t,name:o,email:a,phone:n,empRole:u,department:l,status:m}});if(!h.ok)throw new Error(h.message);return h},N=async({empId:e,api:r})=>{const{data:t}=await r.get(`/department/hr/getsingle/${e}`);if(!t.ok)throw new Error(t.message);return t.data},A=async({formData:e,api:r})=>{const{data:t}=await r.post("/department/hr/createemployee",e);if(!t.ok)throw new Error(t.message);return t.data},D=async({empId:e,updates:r,api:t})=>{const{data:o}=await t.put(`/department/hr/update/${e}`,r);if(!o.ok)throw new Error(o.message);return o.data},O=async({empId:e,api:r})=>{const{data:t}=await r.delete(`/department/hr/deleteemployee/${e}`);if(!t.ok)throw new Error(t.message);return t.data},K=async({empId:e,type:r,file:t,api:o})=>{const a=new FormData;a.append("file",t),a.append("type",r);const{data:n}=await o.post(`/department/hr/${e}/uploaddocument`,a,{headers:{"Content-Type":"multipart/form-data"}});if(!n.ok)throw new Error(n.message);return n.data},M=async({empId:e,docId:r,api:t})=>{const{data:o}=await t.delete(`/department/hr/${e}/deletedocument/${r}`);if(!o.ok)throw new Error(o.message);return o.data},c=["owner","staff","CTO"],G=(e,r)=>{const{role:t}=s(),o=i(t);return q({queryKey:["hr","employees",e,{...r}],enabled:!!e&&!!t,initialPageParam:1,queryFn:async({pageParam:a=1})=>{if(!t||!c.includes(t))throw new Error("Not allowed");if(!o)throw new Error("API instance not found for role");return await x({organizationId:e,api:o,...r})},getNextPageParam:a=>{const{page:n,totalPages:u}=a.pagination;return n<u?n+1:void 0},retry:!1,refetchOnWindowFocus:!1})},_=e=>{const{role:r}=s(),t=i(r);return Q({queryKey:["hr","employee",e],queryFn:async()=>{if(!r||!c.includes(r))throw new Error("not allowed to make this api call");if(!t)throw new Error("API instance not found for role");return await N({empId:e,api:t})},enabled:!!e&&!!r,retry:!1,refetchOnWindowFocus:!1})},T=()=>{const{role:e}=s(),r=i(e);return f({mutationFn:async({formData:t})=>{if(!e||!c.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await A({formData:t,api:r})},onSuccess:()=>{d.invalidateQueries({queryKey:["hr","employees"]})}})},U=()=>{const{role:e}=s(),r=i(e);return f({mutationFn:async({empId:t,updates:o})=>{if(!e||!c.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await D({empId:t,updates:o,api:r})},onSuccess:(t,{empId:o})=>{d.invalidateQueries({queryKey:["hr","employee",o]}),d.invalidateQueries({queryKey:["hr","employees"]})}})},W=()=>{const{role:e}=s(),r=i(e);return f({mutationFn:async({empId:t})=>{if(!e||!c.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await O({empId:t,api:r})},onSuccess:()=>{d.invalidateQueries({queryKey:["hr","employees"]})}})},H=()=>{const{role:e}=s(),r=i(e);return f({mutationFn:async({empId:t,type:o,file:a})=>{if(!e||!c.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await K({empId:t,type:o,file:a,api:r})},onSuccess:(t,{empId:o})=>{d.invalidateQueries({queryKey:["hr","employee",o]})}})},j=()=>{const{role:e}=s(),r=i(e);return f({mutationFn:async({empId:t,docId:o})=>{if(!e||!c.includes(e))throw new Error("not allowed to make this api call");if(!r)throw new Error("API instance not found for role");return await M({empId:t,docId:o,api:r})},onSuccess:(t,{empId:o})=>{d.invalidateQueries({queryKey:["hr","employee",o]})}})};export{U as a,W as b,H as c,j as d,T as e,G as f,_ as u};
