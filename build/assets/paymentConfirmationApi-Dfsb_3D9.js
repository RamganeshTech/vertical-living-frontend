import{d as s,f as m,l as c,g as l,h as i}from"./index-CtOe3gZO.js";const w=async(t,n)=>(await n.get(`/paymentconfirmation/getpaymentconfirmation/${t}`)).data.data,y=async(t,n)=>(await n.put(`/paymentconfirmation/toggleconsent/${t}`)).data.data,f=async(t,n)=>(await n.post(`/paymentconfirmation/generatepayementconsentlink/${t}`)).data.data,d=async({projectId:t,token:n,api:e})=>(await e.post(`/paymentconfirmation/acceptconsent/${t}/${n}`)).data.data,h=t=>{const n=["CTO","owner","staff","client"],{role:e}=s(),a=i(e);return m({enabled:!!t&&!!e,queryKey:["payment-confirmation",t],queryFn:async()=>{if(!e||!n.includes(e))throw new Error("Not allowed");if(!a)throw new Error("API instance missing");return await w(t,a)},retry:!1,refetchOnMount:!1})},q=()=>{const t=["CTO","owner","staff"],{role:n}=s(),e=i(n),a=c();return l({mutationFn:async({projectId:o})=>{if(!n||!t.includes(n))throw new Error("Not allowed");if(!e)throw new Error("API instance missing");return await y(o,e)},onSuccess:(o,{projectId:r})=>{a.invalidateQueries({queryKey:["payment-confirmation",r]})}})},A=()=>{const t=["CTO","owner","staff"],{role:n}=s(),e=i(n),a=c();return l({mutationFn:async({projectId:o})=>{if(!n||!t.includes(n))throw new Error("Not allowed");if(!e)throw new Error("API instance missing");return await f(o,e)},onSuccess:(o,{projectId:r})=>{a.invalidateQueries({queryKey:["payment-confirmation",r]})}})},E=()=>{const t=["CTO","owner","staff","client"],{role:n}=s(),e=i(n),a=c();return l({mutationFn:async({projectId:o,token:r})=>{if(!n||!t.includes(n))throw new Error("Not allowed");if(!e)throw new Error("API instance missing");return await d({projectId:o,token:r,api:e})},onSuccess:(o,{projectId:r})=>{a.invalidateQueries({queryKey:["payment-confirmation",r]})}})},p=async({formId:t,projectId:n,deadLine:e,api:a})=>{const{data:o}=await a.put(`/paymentconfirmation/deadline/${n}/${t}`,{deadLine:e});if(!o.ok)throw new Error(o.message);return o.data},C=async({projectId:t,api:n})=>{const{data:e}=await n.put(`/paymentconfirmation/completionstatus/${t}`);if(!e.ok)throw new Error(e.message);return e.data},P=()=>{const t=["owner","staff","CTO"],{role:n}=s(),e=i(n),a=c();return l({mutationFn:async({formId:o,projectId:r,deadLine:u})=>{if(!n||!t.includes(n))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance missing");return await p({formId:o,projectId:r,deadLine:u,api:e})},onSuccess:()=>{a.invalidateQueries({queryKey:["payment-confirmation"]})}})},R=()=>{const t=["owner","staff","CTO"],{role:n}=s(),e=i(n),a=c();return l({mutationFn:async({projectId:o})=>{if(!n||!t.includes(n))throw new Error("not allowed to make this api call");if(!e)throw new Error("API instance missing");return await C({projectId:o,api:e})},onSuccess:(o,{projectId:r})=>{a.invalidateQueries({queryKey:["payment-confirmation",r]})}})};export{R as a,P as b,q as c,A as d,E as e,h as u};
